crystal_doc_search_index_callback({"repository_name":"medup","body":"[![Stand With Ukraine](https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner2-direct.svg)](https://stand-with-ukraine.pp.ua/)\n\n![Logo](./img/logo.svg)\n\n# Medup\n\n[![](https://img.shields.io/github/release/miry/medup.svg?style=flat)](https://github.com/miry/medup/releases)\n[![](https://img.shields.io/github/license/miry/medup)](https://raw.githubusercontent.com/miry/medup/master/LICENSE)\n[![Stand With Ukraine](https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/badges/StandWithUkraine.svg)](https://stand-with-ukraine.pp.ua)\n[![Made in Ukraine](https://img.shields.io/badge/made_in-ukraine-ffd700.svg?labelColor=0057b7)](https://stand-with-ukraine.pp.ua)\n\n> Sync all content from Medium with local folder via API\n\n# Table of Contents\n\n* [Usage](#usage)\n* [Features](#features)\n* [Getting Started](#getting-started)\n* [Contributing](#contributing)\n* [Contributors](#contributors)\n* [License](#license)\n\n# Usage\n\n## Export post\n\nExport a single medium post to local\n\n```shell\nmedup https://medium.com/notes-and-tips-in-full-stack-development/medup-backups-articles-8bf90179b094\n```\n\n## Author's posts\n\nExport all articles written by single author to special folder `posts/miry`\n\n```shell\nmedup -u miry -d posts/miry\n```\n\nAlternative:\n\n```shell\nmedup @miry -d posts/miry\n```\n\n## User's recommendations\n\nExport all articles recommended by `miry`:\n\n```shell\nmedup -u miry -d posts/recommendations -r\n```\n\nAlternative:\n\n```shell\nmedup @miry -d posts/recommendations -r\n```\n\n## Publication's posts\n\nExport all articles written by single author to special folder `posts/miry`\n\n```shell\nmedup -p jetthoughts -d posts/jetthoughts\n```\n\nAlternative:\n\n```shell\nmedup jetthoughts -d posts/jetthoughts\n```\n\n## Mix\n\n```shell\nmedup -u miry @pftg -p jetthoughts notes-and-tips-in-full-stack-development https://medium.com/notes-and-tips-in-full-stack-development/medup-backups-articles-8bf90179b094\n```\n\nIt would download all articles for:\n1. user `@miry`\n1. user `@pftg`\n1. publication `jetthoughts`\n1. publication `notes-and-tips-in-full-stack-development`\n1. single post \"Medup backups articles\"\n\n# Features\n\n* Discover all articles from user account available in public\n* Allow to download all recommended articles by user\n* Discover all articles from publisher, that available in public\n* Download images used inside article\n* Save posts in markdown format\n* Convert a single article in markdown format\n\n# Getting Started\n\n## Homebrew\n\nInstall `medup` tool to the MacOS or Linux via Hombrew:\n\n\n```shell\n$ brew tap miry/medup\n$ brew install medup\n```\n\nRun export command for **Medium** author *miry* and save articles to local folder:\n\n```shell\n$ medup -u miry -d .\n$ medup -d . https://medium.com/notes-and-tips-in-full-stack-development/medup-backups-articles-8bf90179b094\n```\n\n## Docker\n\nDocker way to make same job:\n\n```shell\n$ docker run -v <path to local articles folder>:/posts -it miry/medup -u <user>\n```\n\nDownload all articles that user has recommended:\n\n```shell\n$ docker run -v <path to local articles folder>:/posts -it miry/medup -u <user> --recommended -d posts/recommended\n```\n\n## Crystal\n\nRun dumping with source code\n\n```shell\n$ shards install\n$ crystal run src/cli.cr -- -u <medium user> -d <destination folder>\n```\n\nExample download all posts from author https://medium.com/@miry to local folder `posts/miry`\n\n```shell\n$ crystal run src/cli.cr -- -u miry -d posts/miry\n```\n\n## Build\n\nBuild a application binary and execute:\n\n```shell\n$ shards install\n$ rake build\n$ _output/medup -u <medium user> -d <destination folder>\n```\n\n# Result\n\nBy default all articles destination folder is `posts`.\n\n\nIn the directory, you can find 2 format of files: `.json` and `.md`.\n- *JSON* format is the raw, what *Medium* returns.\n- *Markdown* format is simple implementation of block formated text.\n\nImages encoded in the result document.\nRich elements content are located in `posts/assets` and integrated with `<IFRAME>`.\n\n## Markdown\n\nExample of exported document (Original Medium post vs Exported Markdown):\n\n![](./img/compare.png)\n\n# Contributing\n\n1. Fork it ( https://github.com/miry/medup/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n# Contributors\n\n- [@miry](https://github.com/miry) Michael Nikitochkin - creator, maintainer\n- [@alexanderadam](https://github.com/alexanderadam) Alexander - supporter\n- [@clawfire](https://github.com/clawfire) Thibault Milan - supporter\n\n# License\n\nThis project is under the LGPL-3.0 license.\n\n# Play ownself\n\n### FAQ\n\n* Clean unused assets:\n```shell\n$ for i in $(ls -1 assets/*); do grep -q \"$i\" *.md || echo $i; done | xargs rm\n```\n* Detect potential articles with **IFRAME** content for gists:\n```shell\n$ for i in $(ls -1 assets/*.html); do grep \"gist.github.com\" -q $i && grep -n \"$i\" *.md; done\n```\n* Detect potential articles' url with **IFRAME** content for gists:\n```shell\n$ for i in $(ls -1 assets/*.html); do grep \"gist.github.com\" -q $i && (grep -l \"$i\" *.md | xargs head | grep url); done\n```\n* Detect potential articles' url with **IFRAME** content for youtube:\n```shell\n$ for i in $(ls -1 assets/*.html); do grep \"schema=youtube\" -q $i && (grep -l \"$i\" *.md | xargs head | grep url); done\n```\n\n### Medium API\n\n1. [Medium API documentation](https://github.com/Medium/medium-api-docs)\n1. Generate token on the page https://medium.com/me/settings\n1. Create environment variable `MEDIUM_TOKEN=<token>`\n\n1. Verify token with sample query:\n```shell\n$ curl -H \"Authorization: Bearer <token>\" https://api.medium.com/v1/me\n{\"data\":{\"id\":\"number\",\"username\":\"miry\",\"name\":\"Michael Nikitochkin\",\"url\":\"https://medium.com/@miry\",\"imageUrl\":\"https://cdn-images-1.medium.com/fit/c/400/400/0*KgbjgGnH-csHuB8j.\"}}\n```\n\n### Crawler\n\n1. Check public information not covered by API\n```shell\n$ curl \"https://medium.com/@miry?format=json\" | cut -c17- && : Remove in the front from response some strange JS code.\n```\n\n2. Pagination\n```shell\n$ curl \"https://medium.com/@miry/latest?format=json&limit=100\" | cut -c17- && : Remove in the front from response some strange JS code.\n```\n\n3. Post info\n```shell\ncurl -s -H \"Content-Type: application/json\" https://medium.com/@miry/c35b40c499e\\?format\\=json\\&limit\\=100\n```\n\n4. Stream\n```shell\n$ curl -s -H \"Content-Type: application/json\" \"https://medium.com/_/api/users/fdf238948af6/profile/stream?source=overview\" | cut -c17-\n$ curl -s -H \"Content-Type: application/json\" \"https://medium.com/_/api/users/fdf238948af6/profile/stream?limit=100&page=3\" | cut -c17- > stream.json\n$ cat stream.json| jq \".payload.references.Post[].title\"\n$ cat stream.json| jq \".payload.paging.next\"\n```\n\n5. Recommendations\n```shell\n$ curl -s -H \"Content-Type: application/json\" https://medium.com/@miry/has-recommended | cut -c17-\n$ curl -s -H \"Content-Type: application/json\" \"https://medium.com/_/api/users/fdf238948af6/profile/stream?source=has-recommended\" | cut -c17-\n```\n","program":{"html_id":"medup/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"medup","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"medup/Medium","path":"Medium.html","kind":"module","full_name":"Medium","name":"Medium","abstract":false,"locations":[{"filename":"src/medium/client.cr","line_number":9,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client.cr#L9"},{"filename":"src/medium/client/collections.cr","line_number":1,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/collections.cr#L1"},{"filename":"src/medium/client/media.cr","line_number":2,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/media.cr#L2"},{"filename":"src/medium/client/posts.cr","line_number":1,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/posts.cr#L1"},{"filename":"src/medium/client/publications.cr","line_number":1,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/publications.cr#L1"},{"filename":"src/medium/client/users.cr","line_number":1,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/users.cr#L1"},{"filename":"src/medium/connection.cr","line_number":4,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/connection.cr#L4"},{"filename":"src/medium/connection_api.cr","line_number":3,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/connection_api.cr#L3"},{"filename":"src/medium/error.cr","line_number":1,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/error.cr#L1"},{"filename":"src/medium/post.cr","line_number":7,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L7"},{"filename":"src/medium/post/paragraph.cr","line_number":6,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L6"},{"filename":"src/medium/post/tag.cr","line_number":3,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/tag.cr#L3"},{"filename":"src/medium/user.cr","line_number":3,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/user.cr#L3"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"doc":"https://medium.com/media/e7722acf2886364130e03d2c7ad29de7","summary":"<p>https://medium.com/media/e7722acf2886364130e03d2c7ad29de7</p>","types":[{"html_id":"medup/Medium/Client","path":"Medium/Client.html","kind":"class","full_name":"Medium::Client","name":"Client","abstract":false,"superclass":{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"medup/Medium/Connection","kind":"module","full_name":"Medium::Connection","name":"Connection"},{"html_id":"medup/Medium/Client/Users","kind":"module","full_name":"Medium::Client::Users","name":"Users"},{"html_id":"medup/Medium/Client/Publications","kind":"module","full_name":"Medium::Client::Publications","name":"Publications"},{"html_id":"medup/Medium/Client/Posts","kind":"module","full_name":"Medium::Client::Posts","name":"Posts"},{"html_id":"medup/Medium/Client/Media","kind":"module","full_name":"Medium::Client::Media","name":"Media"},{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/client.cr","line_number":10,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client.cr#L10"},{"filename":"src/medium/client/collections.cr","line_number":2,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/collections.cr#L2"},{"filename":"src/medium/client/media.cr","line_number":3,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/media.cr#L3"},{"filename":"src/medium/client/posts.cr","line_number":2,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/posts.cr#L2"},{"filename":"src/medium/client/publications.cr","line_number":2,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/publications.cr#L2"},{"filename":"src/medium/client/users.cr","line_number":2,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/users.cr#L2"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"medup/Medium/Client/Media","kind":"module","full_name":"Medium::Client::Media","name":"Media"},{"html_id":"medup/Medium/Client/Posts","kind":"module","full_name":"Medium::Client::Posts","name":"Posts"},{"html_id":"medup/Medium/Client/Publications","kind":"module","full_name":"Medium::Client::Publications","name":"Publications"},{"html_id":"medup/Medium/Client/Users","kind":"module","full_name":"Medium::Client::Users","name":"Users"},{"html_id":"medup/Medium/Connection","kind":"module","full_name":"Medium::Connection","name":"Connection"}],"namespace":{"html_id":"medup/Medium","kind":"module","full_name":"Medium","name":"Medium"},"class_methods":[{"html_id":"default-class-method","name":"default","abstract":false,"location":{"filename":"src/medium/client.cr","line_number":27,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client.cr#L27"},"def":{"name":"default","visibility":"Public","body":"@@default"}},{"html_id":"default=(client:Medium::Client)-class-method","name":"default=","abstract":false,"args":[{"name":"client","external_name":"client","restriction":"Medium::Client"}],"args_string":"(client : Medium::Client)","args_html":"(client : <a href=\"../Medium/Client.html\">Medium::Client</a>)","location":{"filename":"src/medium/client.cr","line_number":23,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client.cr#L23"},"def":{"name":"default=","args":[{"name":"client","external_name":"client","restriction":"Medium::Client"}],"visibility":"Public","body":"@@default = client"}}],"constructors":[{"html_id":"new(token:String,user:String?,publication:String?,logger:Logger)-class-method","name":"new","abstract":false,"args":[{"name":"token","external_name":"token","restriction":"String"},{"name":"user","external_name":"user","restriction":"String | ::Nil"},{"name":"publication","external_name":"publication","restriction":"String | ::Nil"},{"name":"logger","external_name":"logger","restriction":"Logger"}],"args_string":"(token : String, user : String?, publication : String?, logger : Logger)","args_html":"(token : String, user : String?, publication : String?, logger : Logger)","location":{"filename":"src/medium/client.cr","line_number":20,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client.cr#L20"},"def":{"name":"new","args":[{"name":"token","external_name":"token","restriction":"String"},{"name":"user","external_name":"user","restriction":"String | ::Nil"},{"name":"publication","external_name":"publication","restriction":"String | ::Nil"},{"name":"logger","external_name":"logger","restriction":"Logger"}],"visibility":"Public","body":"_ = allocate\n_.initialize(token, user, publication, logger)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"close-instance-method","name":"close","abstract":false,"location":{"filename":"src/medium/client.cr","line_number":31,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client.cr#L31"},"def":{"name":"close","visibility":"Public","body":"@http.each do |_, client|\n  client.close\nend"}}],"types":[{"html_id":"medup/Medium/Client/Collections","path":"Medium/Client/Collections.html","kind":"module","full_name":"Medium::Client::Collections","name":"Collections","abstract":false,"locations":[{"filename":"src/medium/client/collections.cr","line_number":3,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/collections.cr#L3"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medium/Client","kind":"class","full_name":"Medium::Client","name":"Client"},"instance_methods":[{"html_id":"collection(collection:String)-instance-method","name":"collection","abstract":false,"args":[{"name":"collection","external_name":"collection","restriction":"String"}],"args_string":"(collection : String)","args_html":"(collection : String)","location":{"filename":"src/medium/client/collections.cr","line_number":4,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/collections.cr#L4"},"def":{"name":"collection","args":[{"name":"collection","external_name":"collection","restriction":"String"}],"visibility":"Public","body":"get(\"/#{collection}\")"}}]},{"html_id":"medup/Medium/Client/Media","path":"Medium/Client/Media.html","kind":"module","full_name":"Medium::Client::Media","name":"Media","abstract":false,"locations":[{"filename":"src/medium/client/media.cr","line_number":4,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/media.cr#L4"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"medup/Medium/Client","kind":"class","full_name":"Medium::Client","name":"Client"}],"namespace":{"html_id":"medup/Medium/Client","kind":"class","full_name":"Medium::Client","name":"Client"},"instance_methods":[{"html_id":"media(id:String)-instance-method","name":"media","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(id : String)","args_html":"(id : String)","location":{"filename":"src/medium/client/media.cr","line_number":5,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/media.cr#L5"},"def":{"name":"media","args":[{"name":"id","external_name":"id","restriction":"String"}],"visibility":"Public","body":"download(\"/media/\" + id)"}}]},{"html_id":"medup/Medium/Client/Posts","path":"Medium/Client/Posts.html","kind":"module","full_name":"Medium::Client::Posts","name":"Posts","abstract":false,"locations":[{"filename":"src/medium/client/posts.cr","line_number":3,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/posts.cr#L3"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"medup/Medium/Client","kind":"class","full_name":"Medium::Client","name":"Client"}],"namespace":{"html_id":"medup/Medium/Client","kind":"class","full_name":"Medium::Client","name":"Client"},"instance_methods":[{"html_id":"collection_archive(year:String=\"\",month:String=\"\",day:String=\"\"):Array(String)-instance-method","name":"collection_archive","doc":"A list of all posts from publications","summary":"<p>A list of all posts from publications</p>","abstract":false,"args":[{"name":"year","default_value":"\"\"","external_name":"year","restriction":"String"},{"name":"month","default_value":"\"\"","external_name":"month","restriction":"String"},{"name":"day","default_value":"\"\"","external_name":"day","restriction":"String"}],"args_string":"(year : String = \"\", month : String = \"\", day : String = \"\") : Array(String)","args_html":"(year : String = <span class=\"s\">&quot;&quot;</span>, month : String = <span class=\"s\">&quot;&quot;</span>, day : String = <span class=\"s\">&quot;&quot;</span>) : Array(String)","location":{"filename":"src/medium/client/posts.cr","line_number":104,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/posts.cr#L104"},"def":{"name":"collection_archive","args":[{"name":"year","default_value":"\"\"","external_name":"year","restriction":"String"},{"name":"month","default_value":"\"\"","external_name":"month","restriction":"String"},{"name":"day","default_value":"\"\"","external_name":"day","restriction":"String"}],"return_type":"Array(String)","visibility":"Public","body":"params : Hash(String, String) | ::Nil = Hash(String, String).new\nstream_url = \"/#{@publication}/archive\"\nif year != \"\"\n  stream_url = stream_url + \"/#{year}\"\n  if month != \"\"\n    stream_url = stream_url + \"/#{month}\"\n    if day != \"\"\n      stream_url = stream_url + \"/#{day}\"\n    end\n  end\nend\nresult = [] of String\nresponse = get(stream_url, params: params)\nreferences = response[\"payload\"][\"references\"].raw.as(Hash)\nif references.has_key?(\"Post\")\n  records = references[\"Post\"]\n  (records.raw.as(Hash)).each do |post_id, post|\n    result << (post_id_to_url(post_id))\n  end\nend\nif year.empty?\n  bucket = response[\"payload\"][\"archiveIndex\"][\"yearlyBuckets\"].raw.as(Array)\n  bucket.each do |year_bucket|\n    if year_bucket[\"hasStories\"] != true\n      next\n    end\n    result = result + (collection_archive(year_bucket[\"year\"].raw.as(String)))\n  end\nelse\n  if month.empty?\n    bucket = response[\"payload\"][\"archiveIndex\"][\"monthlyBuckets\"].raw.as(Array)\n    bucket.each do |month_bucket|\n      if month_bucket[\"hasStories\"] != true\n        next\n      end\n      result = result + (collection_archive(month_bucket[\"year\"].raw.as(String), month_bucket[\"month\"].raw.as(String)))\n    end\n  else\n    if day.empty?\n      bucket = response[\"payload\"][\"archiveIndex\"][\"dailyBuckets\"].raw.as(Array)\n      bucket.each do |day_bucket|\n        if day_bucket[\"hasStories\"] != true\n          next\n        end\n        result = result + (collection_archive(day_bucket[\"year\"].raw.as(String), day_bucket[\"month\"].raw.as(String), day_bucket[\"day\"].raw.as(String)))\n      end\n    end\n  end\nend\nresult.uniq\n"}},{"html_id":"collection_stream-instance-method","name":"collection_stream","doc":"Publication home page. Returns only favorite articles","summary":"<p>Publication home page.</p>","abstract":false,"location":{"filename":"src/medium/client/posts.cr","line_number":74,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/posts.cr#L74"},"def":{"name":"collection_stream","visibility":"Public","body":"p = publication\npublication_id = p[\"collection\"][\"id\"]\nparams : Hash(String, String) | ::Nil = Hash(String, String).new\nstream_url = \"/_/api/collections/#{publication_id}/stream\"\nresult = [] of String\nwhile params\n  response = get(stream_url, params: params)\n  references = response[\"payload\"][\"references\"]\n  if references.has_key?(\"Post\")\n    records = references[\"Post\"]\n    (records.raw.as(Hash)).each do |post_id, post|\n      result << (post_id_to_url(post_id))\n    end\n  end\n  next_page = response[\"payload\"][\"paging\"][\"next\"]?\n  if next_page.nil?\n    break\n  end\n  params[\"page\"] = next_page[\"page\"].raw.to_s\n  params[\"to\"] = next_page[\"to\"].raw.to_s\nend\nresult\n"}},{"html_id":"normalize_urls(urls:Array(String)):Array(String)-instance-method","name":"normalize_urls","abstract":false,"args":[{"name":"urls","external_name":"urls","restriction":"Array(String)"}],"args_string":"(urls : Array(String)) : Array(String)","args_html":"(urls : Array(String)) : Array(String)","location":{"filename":"src/medium/client/posts.cr","line_number":58,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/posts.cr#L58"},"def":{"name":"normalize_urls","args":[{"name":"urls","external_name":"urls","restriction":"Array(String)"}],"return_type":"Array(String)","visibility":"Public","body":"result = Array(String).new\nurls.each do |url|\n  post_id = post_id_from_url(url)\n  if post_id\n    result << (post_id_to_url(post_id))\n  else\n    result << url\n  end\nend\nreturn result\n"}},{"html_id":"post_by_id(post_id:String)-instance-method","name":"post_by_id","abstract":false,"args":[{"name":"post_id","external_name":"post_id","restriction":"String"}],"args_string":"(post_id : String)","args_html":"(post_id : String)","location":{"filename":"src/medium/client/posts.cr","line_number":158,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/posts.cr#L158"},"def":{"name":"post_by_id","args":[{"name":"post_id","external_name":"post_id","restriction":"String"}],"visibility":"Public","body":"self.post_by_url(post_id_to_url(post_id))"}},{"html_id":"post_by_url(url:String)-instance-method","name":"post_by_url","abstract":false,"args":[{"name":"url","external_name":"url","restriction":"String"}],"args_string":"(url : String)","args_html":"(url : String)","location":{"filename":"src/medium/client/posts.cr","line_number":162,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/posts.cr#L162"},"def":{"name":"post_by_url","args":[{"name":"url","external_name":"url","restriction":"String"}],"visibility":"Public","body":"response = get(url)\nresult = Medium::Post.from_json(response[\"payload\"][\"value\"].to_json)\nresult.url = url\nresult.logger = @logger\ncreator_id = response[\"payload\"][\"value\"][\"creatorId\"].as_s\nresult.user = User.from_json(response[\"payload\"][\"references\"][\"User\"][creator_id].to_json)\nresult\n"}},{"html_id":"post_id_from_url(url:String)-instance-method","name":"post_id_from_url","abstract":false,"args":[{"name":"url","external_name":"url","restriction":"String"}],"args_string":"(url : String)","args_html":"(url : String)","location":{"filename":"src/medium/client/posts.cr","line_number":179,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/posts.cr#L179"},"def":{"name":"post_id_from_url","args":[{"name":"url","external_name":"url","restriction":"String"}],"visibility":"Public","body":"((/^https:\\/\\/medium.com\\/.*-(?<post_id>[^-]*)$/).match(url)).try(&.[](\"post_id\"))"}},{"html_id":"posts(source=\"overview\")-instance-method","name":"posts","abstract":false,"args":[{"name":"source","default_value":"\"overview\"","external_name":"source","restriction":""}],"args_string":"(source = \"overview\")","args_html":"(source = <span class=\"s\">&quot;overview&quot;</span>)","location":{"filename":"src/medium/client/posts.cr","line_number":4,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/posts.cr#L4"},"def":{"name":"posts","args":[{"name":"source","default_value":"\"overview\"","external_name":"source","restriction":""}],"visibility":"Public","body":"u = user\nuser_id = u[\"user\"][\"userId\"]\nresult = [] of Hash(String, JSON::Any)\nparams : Hash(String, String) | ::Nil = {\"limit\" => \"100\", \"source\" => source}\nstream_url = \"/_/api/users/#{user_id}/profile/stream\"\nwhile params\n  response = get(stream_url, params: params)\n  records = response[\"payload\"][\"references\"][\"Post\"]\n  (records.raw.as(Hash)).each do |k, post|\n    result << (post.raw.as(Hash))\n  end\n  next_page = response[\"payload\"][\"paging\"][\"next\"]?\n  if next_page.nil?\n    break\n  end\n  params[\"page\"] = next_page[\"page\"].raw.to_s\n  params[\"to\"] = next_page[\"to\"].raw.to_s\nend\nresult\n"}},{"html_id":"streams(source=\"overview\")-instance-method","name":"streams","abstract":false,"args":[{"name":"source","default_value":"\"overview\"","external_name":"source","restriction":""}],"args_string":"(source = \"overview\")","args_html":"(source = <span class=\"s\">&quot;overview&quot;</span>)","location":{"filename":"src/medium/client/posts.cr","line_number":29,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/posts.cr#L29"},"def":{"name":"streams","args":[{"name":"source","default_value":"\"overview\"","external_name":"source","restriction":""}],"visibility":"Public","body":"u = user\nuser_id = u[\"user\"][\"userId\"]\nresult = [] of String\nparams : Hash(String, String) | ::Nil = {\"limit\" => \"100\", \"source\" => source}\nstream_url = \"/_/api/users/#{user_id}/profile/stream\"\nwhile params\n  response = get(stream_url, params: params)\n  records = response[\"payload\"][\"streamItems\"]\n  (records.raw.as(Array)).each do |post|\n    post_preview = post.raw.as(Hash)\n    if post_preview[\"itemType\"] == \"postPreview\"\n      post_id = post[\"postPreview\"][\"postId\"].raw.as(String)\n      result << (post_id_to_url(post_id))\n    end\n  end\n  next_page = response[\"payload\"][\"paging\"][\"next\"]?\n  if next_page.nil?\n    break\n  end\n  params[\"page\"] = next_page[\"page\"].raw.to_s\n  params[\"to\"] = next_page[\"to\"].raw.to_s\nend\nresult\n"}}]},{"html_id":"medup/Medium/Client/Publications","path":"Medium/Client/Publications.html","kind":"module","full_name":"Medium::Client::Publications","name":"Publications","abstract":false,"locations":[{"filename":"src/medium/client/publications.cr","line_number":3,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/publications.cr#L3"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"medup/Medium/Client","kind":"class","full_name":"Medium::Client","name":"Client"}],"namespace":{"html_id":"medup/Medium/Client","kind":"class","full_name":"Medium::Client","name":"Client"},"instance_methods":[{"html_id":"publication-instance-method","name":"publication","abstract":false,"location":{"filename":"src/medium/client/publications.cr","line_number":4,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/publications.cr#L4"},"def":{"name":"publication","visibility":"Public","body":"if @publication.nil?\n  raise(\"require publication\")\nend\n(get(\"/#{@publication}\"))[\"payload\"]\n"}}]},{"html_id":"medup/Medium/Client/Users","path":"Medium/Client/Users.html","kind":"module","full_name":"Medium::Client::Users","name":"Users","abstract":false,"locations":[{"filename":"src/medium/client/users.cr","line_number":3,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/users.cr#L3"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"medup/Medium/Client","kind":"class","full_name":"Medium::Client","name":"Client"}],"namespace":{"html_id":"medup/Medium/Client","kind":"class","full_name":"Medium::Client","name":"Client"},"instance_methods":[{"html_id":"user-instance-method","name":"user","doc":"https://github.com/Medium/medium-api-docs#31-users","summary":"<p>https://github.com/Medium/medium-api-docs#31-users</p>","abstract":false,"location":{"filename":"src/medium/client/users.cr","line_number":5,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/client/users.cr#L5"},"def":{"name":"user","visibility":"Public","body":"if @user.nil?\n  raise(\"require user\")\nend\n(get(\"/@#{@user}\"))[\"payload\"]\n"}}]}]},{"html_id":"medup/Medium/ClientError","path":"Medium/ClientError.html","kind":"class","full_name":"Medium::ClientError","name":"ClientError","abstract":false,"superclass":{"html_id":"medup/Medium/Error","kind":"class","full_name":"Medium::Error","name":"Error"},"ancestors":[{"html_id":"medup/Medium/Error","kind":"class","full_name":"Medium::Error","name":"Error"},{"html_id":"medup/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/error.cr","line_number":65,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/error.cr#L65"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medium","kind":"module","full_name":"Medium","name":"Medium"}},{"html_id":"medup/Medium/Connection","path":"Medium/Connection.html","kind":"module","full_name":"Medium::Connection","name":"Connection","abstract":false,"locations":[{"filename":"src/medium/connection.cr","line_number":5,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/connection.cr#L5"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_PARAMS","name":"DEFAULT_PARAMS","value":"{\"format\" => \"json\"}"},{"id":"HOST","name":"HOST","value":"\"medium.com\""}],"including_types":[{"html_id":"medup/Medium/Client","kind":"class","full_name":"Medium::Client","name":"Client"}],"namespace":{"html_id":"medup/Medium","kind":"module","full_name":"Medium","name":"Medium"},"instance_methods":[{"html_id":"download(endpoint:String)-instance-method","name":"download","abstract":false,"args":[{"name":"endpoint","external_name":"endpoint","restriction":"String"}],"args_string":"(endpoint : String)","args_html":"(endpoint : String)","location":{"filename":"src/medium/connection.cr","line_number":58,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/connection.cr#L58"},"def":{"name":"download","args":[{"name":"endpoint","external_name":"endpoint","restriction":"String"}],"visibility":"Public","body":"response = http.exec(\"GET\", endpoint)\n@logger.debug(\"GET #{endpoint} => #{response.status_code} #{response.status_message}\")\nerror = Medium::Error.from_response(response)\nif error\n  raise(error)\nend\nresponse.body\n"}},{"html_id":"get(endpoint,params:Hash(String,String)?=nil,headers:HTTP::Headers?=nil,body:String?=nil)-instance-method","name":"get","abstract":false,"args":[{"name":"endpoint","external_name":"endpoint","restriction":""},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, String) | ::Nil"},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"args_string":"(endpoint, params : Hash(String, String)? = nil, headers : HTTP::Headers? = nil, body : String? = nil)","args_html":"(endpoint, params : Hash(String, String)? = <span class=\"n\">nil</span>, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : String? = <span class=\"n\">nil</span>)","location":{"filename":"src/medium/connection.cr","line_number":9,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/connection.cr#L9"},"def":{"name":"get","args":[{"name":"endpoint","external_name":"endpoint","restriction":""},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, String) | ::Nil"},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"visibility":"Public","body":"params = DEFAULT_PARAMS.merge(params || Hash(String, String).new)\nrequest(\"GET\", endpoint, params, headers, body)\n"}},{"html_id":"http(host:String?=HOST):HTTP::Client-instance-method","name":"http","abstract":false,"args":[{"name":"host","default_value":"HOST","external_name":"host","restriction":"String | ::Nil"}],"args_string":"(host : String? = HOST) : HTTP::Client","args_html":"(host : String? = <span class=\"t\">HOST</span>) : HTTP::Client","location":{"filename":"src/medium/connection.cr","line_number":14,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/connection.cr#L14"},"def":{"name":"http","args":[{"name":"host","default_value":"HOST","external_name":"host","restriction":"String | ::Nil"}],"return_type":"HTTP::Client","visibility":"Public","body":"host || (host = HOST)\nif @http.has_key?(host)\n  return @http[host].not_nil!\nend\n_http = HTTP::Client.new(host, port: 443, tls: true)\n_http.before_request do |request|\n  request.headers[\"Content-Type\"] = \"application/json\"\n  request.headers[\"User-Agent\"] = \"medup/#{Medup::VERSION}\"\n  request.headers[\"Accept\"] = \"*/*\"\nend\n@http[host] = _http\nreturn _http\n"}},{"html_id":"request(method,endpoint,params:Hash(String,String)?=nil,headers:HTTP::Headers?=nil,body:String?=nil)-instance-method","name":"request","abstract":false,"args":[{"name":"method","external_name":"method","restriction":""},{"name":"endpoint","external_name":"endpoint","restriction":""},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, String) | ::Nil"},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"args_string":"(method, endpoint, params : Hash(String, String)? = nil, headers : HTTP::Headers? = nil, body : String? = nil)","args_html":"(method, endpoint, params : Hash(String, String)? = <span class=\"n\">nil</span>, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : String? = <span class=\"n\">nil</span>)","location":{"filename":"src/medium/connection.cr","line_number":32,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/connection.cr#L32"},"def":{"name":"request","args":[{"name":"method","external_name":"method","restriction":""},{"name":"endpoint","external_name":"endpoint","restriction":""},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, String) | ::Nil"},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"visibility":"Public","body":"uri = URI.parse(endpoint)\nif params\n  o = uri.query_params\n  params.each do |k, v|\n    o.add(k, v)\n  end\n  uri.query_params = o\nend\nresponse = (http(uri.host)).exec(method: method.upcase, path: uri.request_target, headers: headers, body: body)\n@logger.info(\"#{method} #{uri} => #{response.status_code} #{response.status_message}\")\nlimit = 10\nwhile (limit > 0 && response.status_code >= 300) && response.status_code < 400\n  endpoint = response.headers[\"location\"]\n  uri = URI.parse(endpoint)\n  response = (http(uri.host)).exec(method: method.upcase, path: uri.request_target, headers: headers, body: body)\n  @logger.info(\"#{method} #{uri} => #{response.status_code} #{response.status_message}\")\n  limit = limit - 1\nend\nerror = Medium::Error.from_response(response)\nif error\n  raise(error)\nend\nJSON.parse(response.body[16..])\n"}}]},{"html_id":"medup/Medium/ConnectionAPI","path":"Medium/ConnectionAPI.html","kind":"module","full_name":"Medium::ConnectionAPI","name":"ConnectionAPI","abstract":false,"locations":[{"filename":"src/medium/connection_api.cr","line_number":4,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/connection_api.cr#L4"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HOST","name":"HOST","value":"\"api.medium.com\""}],"namespace":{"html_id":"medup/Medium","kind":"module","full_name":"Medium","name":"Medium"},"instance_methods":[{"html_id":"get(endpoint,headers:HTTP::Headers?=nil,body:String?=nil)-instance-method","name":"get","abstract":false,"args":[{"name":"endpoint","external_name":"endpoint","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"args_string":"(endpoint, headers : HTTP::Headers? = nil, body : String? = nil)","args_html":"(endpoint, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : String? = <span class=\"n\">nil</span>)","location":{"filename":"src/medium/connection_api.cr","line_number":7,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/connection_api.cr#L7"},"def":{"name":"get","args":[{"name":"endpoint","external_name":"endpoint","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"visibility":"Public","body":"request(\"GET\", endpoint, headers, body)"}},{"html_id":"http:HTTP::Client-instance-method","name":"http","abstract":false,"location":{"filename":"src/medium/connection_api.cr","line_number":19,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/connection_api.cr#L19"},"def":{"name":"http","return_type":"HTTP::Client","visibility":"Public","body":"if !@http.nil?\n  return @http.not_nil!\nend\n_http = HTTP::Client.new(HOST, port: 443, tls: true)\n_http.before_request do |request|\n  request.headers[\"Content-Type\"] = \"application/json\"\n  request.headers[\"Authorization\"] = \"Bearer #{@token}\"\nend\n@http = _http\nreturn _http\n"}},{"html_id":"patch(endpoint,headers:HTTP::Headers?=nil,body:String?=nil)-instance-method","name":"patch","abstract":false,"args":[{"name":"endpoint","external_name":"endpoint","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"args_string":"(endpoint, headers : HTTP::Headers? = nil, body : String? = nil)","args_html":"(endpoint, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : String? = <span class=\"n\">nil</span>)","location":{"filename":"src/medium/connection_api.cr","line_number":15,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/connection_api.cr#L15"},"def":{"name":"patch","args":[{"name":"endpoint","external_name":"endpoint","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"visibility":"Public","body":"request(\"PATCH\", endpoint, headers, body)"}},{"html_id":"post(endpoint,headers:HTTP::Headers?=nil,body:String?=nil)-instance-method","name":"post","abstract":false,"args":[{"name":"endpoint","external_name":"endpoint","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"args_string":"(endpoint, headers : HTTP::Headers? = nil, body : String? = nil)","args_html":"(endpoint, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : String? = <span class=\"n\">nil</span>)","location":{"filename":"src/medium/connection_api.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/connection_api.cr#L11"},"def":{"name":"post","args":[{"name":"endpoint","external_name":"endpoint","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"visibility":"Public","body":"request(\"POST\", endpoint, headers, body)"}},{"html_id":"request(method,endpoint,headers:HTTP::Headers?=nil,body:String?=nil)-instance-method","name":"request","abstract":false,"args":[{"name":"method","external_name":"method","restriction":""},{"name":"endpoint","external_name":"endpoint","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"args_string":"(method, endpoint, headers : HTTP::Headers? = nil, body : String? = nil)","args_html":"(method, endpoint, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : String? = <span class=\"n\">nil</span>)","location":{"filename":"src/medium/connection_api.cr","line_number":35,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/connection_api.cr#L35"},"def":{"name":"request","args":[{"name":"method","external_name":"method","restriction":""},{"name":"endpoint","external_name":"endpoint","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"visibility":"Public","body":"response = http.exec(method.upcase, endpoint, headers, body)\nputs(\"#{method} #{endpoint} => #{response.status_code} #{response.status_message}\")\nerror = Medium::Error.from_response(response)\nif error\n  raise(error)\nend\nJSON.parse(response.body)\n"}}]},{"html_id":"medup/Medium/Error","path":"Medium/Error.html","kind":"class","full_name":"Medium::Error","name":"Error","abstract":false,"superclass":{"html_id":"medup/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"medup/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/error.cr","line_number":2,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/error.cr#L2"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VALID_TYPES","name":"VALID_TYPES","value":"[\"text/json\", \"application/json\"]"}],"subclasses":[{"html_id":"medup/Medium/ClientError","kind":"class","full_name":"Medium::ClientError","name":"ClientError"},{"html_id":"medup/Medium/ServerError","kind":"class","full_name":"Medium::ServerError","name":"ServerError"}],"namespace":{"html_id":"medup/Medium","kind":"module","full_name":"Medium","name":"Medium"},"class_methods":[{"html_id":"from_response(response:HTTP::Client::Response)-class-method","name":"from_response","abstract":false,"args":[{"name":"response","external_name":"response","restriction":"HTTP::Client::Response"}],"args_string":"(response : HTTP::Client::Response)","args_html":"(response : HTTP::Client::Response)","location":{"filename":"src/medium/error.cr","line_number":8,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/error.cr#L8"},"def":{"name":"from_response","args":[{"name":"response","external_name":"response","restriction":"HTTP::Client::Response"}],"visibility":"Public","body":"klass = case response.status_code\nwhen 400..499\n  ::Medium::ClientError\nwhen 500..599\n  ::Medium::ServerError\nelse\n  if VALID_TYPES.includes?(response.content_type)\n    return\n  end\n  return ::Medium::InvalidContentError.new(\"unsupported content type #{response.content_type}\")\nend\nklass.new(response)\n"}},{"html_id":"json(response)-class-method","name":"json","abstract":false,"args":[{"name":"response","external_name":"response","restriction":""}],"args_string":"(response)","args_html":"(response)","location":{"filename":"src/medium/error.cr","line_number":60,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/error.cr#L60"},"def":{"name":"json","args":[{"name":"response","external_name":"response","restriction":""}],"visibility":"Public","body":"JSON.parse(response.body[16..])"}}],"constructors":[{"html_id":"new(response:HTTP::Client::Response=nil)-class-method","name":"new","abstract":false,"args":[{"name":"response","default_value":"nil","external_name":"response","restriction":"HTTP::Client::Response"}],"args_string":"(response : HTTP::Client::Response = nil)","args_html":"(response : HTTP::Client::Response = <span class=\"n\">nil</span>)","location":{"filename":"src/medium/error.cr","line_number":21,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/error.cr#L21"},"def":{"name":"new","args":[{"name":"response","default_value":"nil","external_name":"response","restriction":"HTTP::Client::Response"}],"visibility":"Public","body":"_ = allocate\n_.initialize(response)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"build_error_message-instance-method","name":"build_error_message","abstract":false,"location":{"filename":"src/medium/error.cr","line_number":33,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/error.cr#L33"},"def":{"name":"build_error_message","visibility":"Public","body":"if @response.nil?\n  return nil\nend\nmessage = \"#{@response.status_code} #{@response.status_message} \"\nif response_error\n  message = message + \"#{response_error} \"\nend\nmessage\n"}},{"html_id":"response_error-instance-method","name":"response_error","abstract":false,"location":{"filename":"src/medium/error.cr","line_number":42,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/error.cr#L42"},"def":{"name":"response_error","visibility":"Public","body":"if data\n  data.not_nil![\"error\"]\nend"}}]},{"html_id":"medup/Medium/InvalidContentError","path":"Medium/InvalidContentError.html","kind":"class","full_name":"Medium::InvalidContentError","name":"InvalidContentError","abstract":false,"superclass":{"html_id":"medup/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"medup/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/error.cr","line_number":69,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/error.cr#L69"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medium","kind":"module","full_name":"Medium","name":"Medium"}},{"html_id":"medup/Medium/ParagraphMetadata","path":"Medium/ParagraphMetadata.html","kind":"class","full_name":"Medium::ParagraphMetadata","name":"ParagraphMetadata","abstract":false,"superclass":{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/post.cr","line_number":114,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L114"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medium","kind":"module","full_name":"Medium","name":"Medium"},"constructors":[{"html_id":"new(__temp_180:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"__temp_180","external_name":"__temp_180","restriction":"::JSON::PullParser"}],"args_string":"(__temp_180 : JSON::PullParser)","args_html":"(__temp_180 : JSON::PullParser)","def":{"name":"new","args":[{"name":"__temp_180","external_name":"__temp_180","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"_ = allocate\n_.initialize(__temp_180)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"id:String-instance-method","name":"id","abstract":false,"def":{"name":"id","return_type":"String","visibility":"Public","body":"@id"}},{"html_id":"id=(_id:String)-instance-method","name":"id=","abstract":false,"args":[{"name":"_id","external_name":"_id","restriction":"String"}],"args_string":"(_id : String)","args_html":"(_id : String)","def":{"name":"id=","args":[{"name":"_id","external_name":"_id","restriction":"String"}],"visibility":"Public","body":"@id = _id"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      _id.to_json(json)\n    end\n  end\nend"}}]},{"html_id":"medup/Medium/Post","path":"Medium/Post.html","kind":"class","full_name":"Medium::Post","name":"Post","abstract":false,"superclass":{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/post.cr","line_number":8,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L8"},{"filename":"src/medium/post/paragraph.cr","line_number":7,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L7"},{"filename":"src/medium/post/tag.cr","line_number":4,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/tag.cr#L4"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medium","kind":"module","full_name":"Medium","name":"Medium"},"constructors":[{"html_id":"new(__temp_146:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"__temp_146","external_name":"__temp_146","restriction":"::JSON::PullParser"}],"args_string":"(__temp_146 : JSON::PullParser)","args_html":"(__temp_146 : JSON::PullParser)","def":{"name":"new","args":[{"name":"__temp_146","external_name":"__temp_146","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"_ = allocate\n_.initialize(__temp_146)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"content:PostContent-instance-method","name":"content","abstract":false,"def":{"name":"content","return_type":"PostContent","visibility":"Public","body":"@content"}},{"html_id":"content=(_content:PostContent)-instance-method","name":"content=","abstract":false,"args":[{"name":"_content","external_name":"_content","restriction":"PostContent"}],"args_string":"(_content : PostContent)","args_html":"(_content : <a href=\"../Medium/PostContent.html\">PostContent</a>)","def":{"name":"content=","args":[{"name":"_content","external_name":"_content","restriction":"PostContent"}],"visibility":"Public","body":"@content = _content"}},{"html_id":"created_at-instance-method","name":"created_at","abstract":false,"location":{"filename":"src/medium/post.cr","line_number":89,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L89"},"def":{"name":"created_at","visibility":"Public","body":"Time.unix_ms(@createdAt)"}},{"html_id":"createdAt:Int64-instance-method","name":"createdAt","abstract":false,"def":{"name":"createdAt","return_type":"Int64","visibility":"Public","body":"@createdAt"}},{"html_id":"createdAt=(_createdAt:Int64)-instance-method","name":"createdAt=","abstract":false,"args":[{"name":"_createdAt","external_name":"_createdAt","restriction":"Int64"}],"args_string":"(_createdAt : Int64)","args_html":"(_createdAt : Int64)","def":{"name":"createdAt=","args":[{"name":"_createdAt","external_name":"_createdAt","restriction":"Int64"}],"visibility":"Public","body":"@createdAt = _createdAt"}},{"html_id":"format(ext)-instance-method","name":"format","abstract":false,"args":[{"name":"ext","external_name":"ext","restriction":""}],"args_string":"(ext)","args_html":"(ext)","location":{"filename":"src/medium/post.cr","line_number":23,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L23"},"def":{"name":"format","args":[{"name":"ext","external_name":"ext","restriction":""}],"visibility":"Public","body":"case ext\nwhen \"json\"\n  to_pretty_json\nwhen \"md\"\n  to_md\nelse\n  raise(\"Unknown render format #{ext}\")\nend"}},{"html_id":"logger:Logger-instance-method","name":"logger","abstract":false,"location":{"filename":"src/medium/post.cr","line_number":12,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L12"},"def":{"name":"logger","return_type":"Logger","visibility":"Public","body":"@logger"}},{"html_id":"logger=(logger:Logger)-instance-method","name":"logger=","abstract":false,"args":[{"name":"logger","external_name":"logger","restriction":"Logger"}],"args_string":"(logger : Logger)","args_html":"(logger : Logger)","location":{"filename":"src/medium/post.cr","line_number":12,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L12"},"def":{"name":"logger=","args":[{"name":"logger","external_name":"logger","restriction":"Logger"}],"visibility":"Public","body":"@logger = logger"}},{"html_id":"options:Array(Medup::Options)-instance-method","name":"options","abstract":false,"location":{"filename":"src/medium/post.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L11"},"def":{"name":"options","return_type":"Array(Medup::Options)","visibility":"Public","body":"@options"}},{"html_id":"options=(options:Array(Medup::Options))-instance-method","name":"options=","abstract":false,"args":[{"name":"options","external_name":"options","restriction":"Array(Medup::Options)"}],"args_string":"(options : Array(Medup::Options))","args_html":"(options : Array(<a href=\"../Medup/Options.html\">Medup::Options</a>))","location":{"filename":"src/medium/post.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L11"},"def":{"name":"options=","args":[{"name":"options","external_name":"options","restriction":"Array(Medup::Options)"}],"visibility":"Public","body":"@options = options"}},{"html_id":"seo_description-instance-method","name":"seo_description","abstract":false,"location":{"filename":"src/medium/post.cr","line_number":76,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L76"},"def":{"name":"seo_description","visibility":"Public","body":"@content.metaDescription || \"\""}},{"html_id":"slug:String-instance-method","name":"slug","abstract":false,"def":{"name":"slug","return_type":"String","visibility":"Public","body":"@slug"}},{"html_id":"slug=(_slug:String)-instance-method","name":"slug=","abstract":false,"args":[{"name":"_slug","external_name":"_slug","restriction":"String"}],"args_string":"(_slug : String)","args_html":"(_slug : String)","def":{"name":"slug=","args":[{"name":"_slug","external_name":"_slug","restriction":"String"}],"visibility":"Public","body":"@slug = _slug"}},{"html_id":"subtitle-instance-method","name":"subtitle","abstract":false,"location":{"filename":"src/medium/post.cr","line_number":80,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L80"},"def":{"name":"subtitle","visibility":"Public","body":"@content.subtitle || \"\""}},{"html_id":"tags-instance-method","name":"tags","doc":"Comma seprated list of tags","summary":"<p>Comma seprated list of tags</p>","abstract":false,"location":{"filename":"src/medium/post.cr","line_number":85,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L85"},"def":{"name":"tags","visibility":"Public","body":"@virtuals.tags.join(\",\", &.slug)"}},{"html_id":"title:String-instance-method","name":"title","abstract":false,"def":{"name":"title","return_type":"String","visibility":"Public","body":"@title"}},{"html_id":"title=(_title:String)-instance-method","name":"title=","abstract":false,"args":[{"name":"_title","external_name":"_title","restriction":"String"}],"args_string":"(_title : String)","args_html":"(_title : String)","def":{"name":"title=","args":[{"name":"_title","external_name":"_title","restriction":"String"}],"visibility":"Public","body":"@title = _title"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"visibility":"Public","body":"json.object do\n  _title = @title\n  if _title.nil?\n  else\n    json.field(\"title\") do\n      _title.to_json(json)\n    end\n  end\n  _slug = @slug\n  if _slug.nil?\n  else\n    json.field(\"slug\") do\n      _slug.to_json(json)\n    end\n  end\n  _createdAt = @createdAt\n  if _createdAt.nil?\n  else\n    json.field(\"createdAt\") do\n      _createdAt.to_json(json)\n    end\n  end\n  _updatedAt = @updatedAt\n  if _updatedAt.nil?\n  else\n    json.field(\"updatedAt\") do\n      _updatedAt.to_json(json)\n    end\n  end\n  _content = @content\n  if _content.nil?\n  else\n    json.field(\"content\") do\n      _content.to_json(json)\n    end\n  end\n  _virtuals = @virtuals\n  if _virtuals.nil?\n  else\n    json.field(\"virtuals\") do\n      _virtuals.to_json(json)\n    end\n  end\nend"}},{"html_id":"to_md-instance-method","name":"to_md","abstract":false,"location":{"filename":"src/medium/post.cr","line_number":34,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L34"},"def":{"name":"to_md","visibility":"Public","body":"result = \"---\\nurl: #{@url}\\ntitle: #{@title}\\nsubtitle: #{subtitle}\\nslug: #{@slug}\\ndescription: #{seo_description}\\ntags: #{tags}\\n\"\nassets = Hash(String, String).new\nif @user.nil?\nelse\n  user = @user.not_nil!\n  result = result + \"author: #{user.name}\\nusername: #{user.username}\\n\"\nend\nresult = result + \"---\\n\\n\"\nfooter = \"\\n\"\n@content.bodyModel.paragraphs.map do |paragraph|\n  content, asset_name, asset_content = paragraph.to_md(@options, @logger)\n  result = result + (content + \"\\n\\n\")\n  if !asset_content.empty?\n    if (paragraph.type == 11) || ((paragraph.type == 4) && (options.includes?(Medup::Options::ASSETS_IMAGE)))\n      assets[asset_name] = asset_content\n    else\n      footer = footer + (asset_content + \"\\n\")\n    end\n  end\nend\nresult = result + footer\nreturn {result, assets}\n"}},{"html_id":"to_pretty_json-instance-method","name":"to_pretty_json","abstract":false,"location":{"filename":"src/medium/post.cr","line_number":72,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L72"},"def":{"name":"to_pretty_json","visibility":"Public","body":"@content.to_pretty_json"}},{"html_id":"updatedAt:Int64-instance-method","name":"updatedAt","abstract":false,"def":{"name":"updatedAt","return_type":"Int64","visibility":"Public","body":"@updatedAt"}},{"html_id":"updatedAt=(_updatedAt:Int64)-instance-method","name":"updatedAt=","abstract":false,"args":[{"name":"_updatedAt","external_name":"_updatedAt","restriction":"Int64"}],"args_string":"(_updatedAt : Int64)","args_html":"(_updatedAt : Int64)","def":{"name":"updatedAt=","args":[{"name":"_updatedAt","external_name":"_updatedAt","restriction":"Int64"}],"visibility":"Public","body":"@updatedAt = _updatedAt"}},{"html_id":"url:String-instance-method","name":"url","abstract":false,"location":{"filename":"src/medium/post.cr","line_number":9,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L9"},"def":{"name":"url","return_type":"String","visibility":"Public","body":"@url"}},{"html_id":"url=(url:String)-instance-method","name":"url=","abstract":false,"args":[{"name":"url","external_name":"url","restriction":"String"}],"args_string":"(url : String)","args_html":"(url : String)","location":{"filename":"src/medium/post.cr","line_number":9,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L9"},"def":{"name":"url=","args":[{"name":"url","external_name":"url","restriction":"String"}],"visibility":"Public","body":"@url = url"}},{"html_id":"user:Medium::User?-instance-method","name":"user","abstract":false,"location":{"filename":"src/medium/post.cr","line_number":10,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L10"},"def":{"name":"user","return_type":"Medium::User | ::Nil","visibility":"Public","body":"@user"}},{"html_id":"user=(user:Medium::User?)-instance-method","name":"user=","abstract":false,"args":[{"name":"user","external_name":"user","restriction":"Medium::User | ::Nil"}],"args_string":"(user : Medium::User?)","args_html":"(user : <a href=\"../Medium/User.html\">Medium::User</a>?)","location":{"filename":"src/medium/post.cr","line_number":10,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L10"},"def":{"name":"user=","args":[{"name":"user","external_name":"user","restriction":"Medium::User | ::Nil"}],"visibility":"Public","body":"@user = user"}},{"html_id":"virtuals:PostVirtuals-instance-method","name":"virtuals","abstract":false,"def":{"name":"virtuals","return_type":"PostVirtuals","visibility":"Public","body":"@virtuals"}},{"html_id":"virtuals=(_virtuals:PostVirtuals)-instance-method","name":"virtuals=","abstract":false,"args":[{"name":"_virtuals","external_name":"_virtuals","restriction":"PostVirtuals"}],"args_string":"(_virtuals : PostVirtuals)","args_html":"(_virtuals : <a href=\"../Medium/PostVirtuals.html\">PostVirtuals</a>)","def":{"name":"virtuals=","args":[{"name":"_virtuals","external_name":"_virtuals","restriction":"PostVirtuals"}],"visibility":"Public","body":"@virtuals = _virtuals"}}],"types":[{"html_id":"medup/Medium/Post/Paragraph","path":"Medium/Post/Paragraph.html","kind":"class","full_name":"Medium::Post::Paragraph","name":"Paragraph","abstract":false,"superclass":{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/post/paragraph.cr","line_number":8,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L8"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medium/Post","kind":"class","full_name":"Medium::Post","name":"Post"},"constructors":[{"html_id":"new(__temp_70:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"__temp_70","external_name":"__temp_70","restriction":"::JSON::PullParser"}],"args_string":"(__temp_70 : JSON::PullParser)","args_html":"(__temp_70 : JSON::PullParser)","location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"new","args":[{"name":"__temp_70","external_name":"__temp_70","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"_ = allocate\n_.initialize(__temp_70)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"alignment:Union(Int64,Nil)-instance-method","name":"alignment","abstract":false,"location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"alignment","return_type":"::Union(Int64, ::Nil)","visibility":"Public","body":"@alignment"}},{"html_id":"alignment=(_alignment:Union(Int64,Nil))-instance-method","name":"alignment=","abstract":false,"args":[{"name":"_alignment","external_name":"_alignment","restriction":"::Union(Int64, ::Nil)"}],"args_string":"(_alignment : Union(Int64, Nil))","args_html":"(_alignment : Union(Int64, Nil))","location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"alignment=","args":[{"name":"_alignment","external_name":"_alignment","restriction":"::Union(Int64, ::Nil)"}],"visibility":"Public","body":"@alignment = _alignment"}},{"html_id":"download(name:String)-instance-method","name":"download","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/medium/post/paragraph.cr","line_number":124,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L124"},"def":{"name":"download","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"src = \"https://medium.com/media/#{name}\"\nresponse = HTTP::Client.get(src)\n@logger.info(\"GET #{src} => #{response.status_code} #{response.status_message}\")\n@logger.info(12, response.headers.to_s)\n@logger.info(12, response.body)\nreturn {response.body, response.content_type}\n"}},{"html_id":"download_image(name:String)-instance-method","name":"download_image","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/medium/post/paragraph.cr","line_number":133,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L133"},"def":{"name":"download_image","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"src = \"https://miro.medium.com/#{name}\"\nresponse = HTTP::Client.get(src)\n@logger.debug(\"GET #{src} => #{response.status_code} #{response.status_message}\")\n@logger.info(12, response.headers.to_s)\nfilename = name\next = File.extname(filename)\nif ext == \"\"\n  mt = response.mime_type\n  if (!mt.nil?) && (!mt.sub_type.nil?)\n    if filename[-1] != '.'\n      filename = filename + \".\"\n    end\n    filename = filename + mt.sub_type.not_nil!\n  end\nend\nreturn {response.body, response.content_type, filename}\n"}},{"html_id":"dropCapImage:Union(DropCapImage,Nil)-instance-method","name":"dropCapImage","abstract":false,"location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"dropCapImage","return_type":"::Union(DropCapImage, ::Nil)","visibility":"Public","body":"@dropCapImage"}},{"html_id":"dropCapImage=(_dropCapImage:Union(DropCapImage,Nil))-instance-method","name":"dropCapImage=","abstract":false,"args":[{"name":"_dropCapImage","external_name":"_dropCapImage","restriction":"::Union(DropCapImage, ::Nil)"}],"args_string":"(_dropCapImage : Union(DropCapImage, Nil))","args_html":"(_dropCapImage : Union(<a href=\"../../Medium/Post/Paragraph/DropCapImage.html\">DropCapImage</a>, Nil))","location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"dropCapImage=","args":[{"name":"_dropCapImage","external_name":"_dropCapImage","restriction":"::Union(DropCapImage, ::Nil)"}],"visibility":"Public","body":"@dropCapImage = _dropCapImage"}},{"html_id":"fetch_gist(id:String?)-instance-method","name":"fetch_gist","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"String | ::Nil"}],"args_string":"(id : String?)","args_html":"(id : String?)","location":{"filename":"src/medium/post/paragraph.cr","line_number":189,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L189"},"def":{"name":"fetch_gist","args":[{"name":"id","external_name":"id","restriction":"String | ::Nil"}],"visibility":"Public","body":"if id.nil?\n  return nil\nend\nsrc = \"https://api.github.com/gists/#{id}\"\nresponse : HTTP::Client::Response | ::Nil = nil\n3.times do\n  response = HTTP::Client.get(src)\n  @logger.info(\"GET #{src} => #{response.status_code} #{response.status_message}\")\n  @logger.info(12, response.headers.to_s)\n  @logger.info(12, response.body)\n  if response.status_code != 403\n    break\n  end\n  response = nil\n  sleep(3)\nend\nif response.nil?\n  return nil\nend\nresult = (JSON.parse(response.body)).try(&.[](\"files\")).try(&.as_h)\nif result.nil?\n  return nil\nend\nreturn result.map do |_, spec|\n  spec.as_h\nend\n"}},{"html_id":"hasDropCap:Union(Bool,Nil)-instance-method","name":"hasDropCap","abstract":false,"location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"hasDropCap","return_type":"::Union(Bool, ::Nil)","visibility":"Public","body":"@hasDropCap"}},{"html_id":"hasDropCap=(_hasDropCap:Union(Bool,Nil))-instance-method","name":"hasDropCap=","abstract":false,"args":[{"name":"_hasDropCap","external_name":"_hasDropCap","restriction":"::Union(Bool, ::Nil)"}],"args_string":"(_hasDropCap : Union(Bool, Nil))","args_html":"(_hasDropCap : Union(Bool, Nil))","location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"hasDropCap=","args":[{"name":"_hasDropCap","external_name":"_hasDropCap","restriction":"::Union(Bool, ::Nil)"}],"visibility":"Public","body":"@hasDropCap = _hasDropCap"}},{"html_id":"href:Union(String,Nil)-instance-method","name":"href","abstract":false,"location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"href","return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@href"}},{"html_id":"href=(_href:Union(String,Nil))-instance-method","name":"href=","abstract":false,"args":[{"name":"_href","external_name":"_href","restriction":"::Union(String, ::Nil)"}],"args_string":"(_href : Union(String, Nil))","args_html":"(_href : Union(String, Nil))","location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"href=","args":[{"name":"_href","external_name":"_href","restriction":"::Union(String, ::Nil)"}],"visibility":"Public","body":"@href = _href"}},{"html_id":"iframe:Union(Iframe,Nil)-instance-method","name":"iframe","abstract":false,"location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"iframe","return_type":"::Union(Iframe, ::Nil)","visibility":"Public","body":"@iframe"}},{"html_id":"iframe=(_iframe:Union(Iframe,Nil))-instance-method","name":"iframe=","abstract":false,"args":[{"name":"_iframe","external_name":"_iframe","restriction":"::Union(Iframe, ::Nil)"}],"args_string":"(_iframe : Union(Iframe, Nil))","args_html":"(_iframe : Union(<a href=\"../../Medium/Post/Paragraph/Iframe.html\">Iframe</a>, Nil))","location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"iframe=","args":[{"name":"_iframe","external_name":"_iframe","restriction":"::Union(Iframe, ::Nil)"}],"visibility":"Public","body":"@iframe = _iframe"}},{"html_id":"layout:Union(Int64,Nil)-instance-method","name":"layout","abstract":false,"location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"layout","return_type":"::Union(Int64, ::Nil)","visibility":"Public","body":"@layout"}},{"html_id":"layout=(_layout:Union(Int64,Nil))-instance-method","name":"layout=","abstract":false,"args":[{"name":"_layout","external_name":"_layout","restriction":"::Union(Int64, ::Nil)"}],"args_string":"(_layout : Union(Int64, Nil))","args_html":"(_layout : Union(Int64, Nil))","location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"layout=","args":[{"name":"_layout","external_name":"_layout","restriction":"::Union(Int64, ::Nil)"}],"visibility":"Public","body":"@layout = _layout"}},{"html_id":"markup-instance-method","name":"markup","abstract":false,"location":{"filename":"src/medium/post/paragraph.cr","line_number":243,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L243"},"def":{"name":"markup","visibility":"Public","body":"open_elements = {} of Int64 => Array(ParagraphMarkup)\nclose_elements = {} of Int64 => Array(ParagraphMarkup)\nlast_marked_pos = 0\nresult : String = \"\"\n_markups = @markups\nif _markups.nil?\n  return result\nend\n_markups.each do |m|\n  if open_elements.has_key?(m.start)\n    open_elements[m.start] << m\n  else\n    open_elements[m.start] = [m] of ParagraphMarkup\n  end\n  if close_elements.has_key?(m.end)\n    close_elements[m.end].insert(0, m)\n  else\n    close_elements[m.end] = [m] of ParagraphMarkup\n  end\nend\n@text = @text + \" \"\nchar_index = 0\n@text.each_grapheme do |symbol|\n  if close_elements.has_key?(char_index)\n    close_elements[char_index].each do |m|\n      case m.type\n      when 1\n        result = result + \"**\"\n      when 2\n        result = result + \"*\"\n      when 3\n        href = m.href.nil? ? \"\" : m.href.not_nil!\n        result = result + \"](#{href})\"\n      when 10\n        result = result + \"`\"\n      else\n        raise(\"Unknown markup type #{m.type} with text #{@text[m.start...m.end]}\")\n      end\n    end\n  end\n  if open_elements.has_key?(char_index)\n    open_elements[char_index].each do |m|\n      case m.type\n      when 1\n        result = result + \"**\"\n      when 2\n        result = result + \"*\"\n      when 3\n        result = result + \"[\"\n      when 10\n        result = result + \"`\"\n      else\n        raise(\"Unknown markup type #{m.type} with text #{@text[m.start...m.end]}\")\n      end\n    end\n  end\n  result = result + symbol.to_s\n  char_index = char_index + (symbol.size == 1 ? 1 : symbol.size * 2)\nend\nresult.rchop\n"}},{"html_id":"markups:Union(Array(ParagraphMarkup),Nil)-instance-method","name":"markups","abstract":false,"location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"markups","return_type":"::Union(Array(ParagraphMarkup), ::Nil)","visibility":"Public","body":"@markups"}},{"html_id":"markups=(_markups:Union(Array(ParagraphMarkup),Nil))-instance-method","name":"markups=","abstract":false,"args":[{"name":"_markups","external_name":"_markups","restriction":"::Union(Array(ParagraphMarkup), ::Nil)"}],"args_string":"(_markups : Union(Array(ParagraphMarkup), Nil))","args_html":"(_markups : Union(Array(<a href=\"../../Medium/Post/Paragraph/ParagraphMarkup.html\">ParagraphMarkup</a>), Nil))","location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"markups=","args":[{"name":"_markups","external_name":"_markups","restriction":"::Union(Array(ParagraphMarkup), ::Nil)"}],"visibility":"Public","body":"@markups = _markups"}},{"html_id":"metadata:Union(ParagraphMetadata,Nil)-instance-method","name":"metadata","abstract":false,"location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"metadata","return_type":"::Union(ParagraphMetadata, ::Nil)","visibility":"Public","body":"@metadata"}},{"html_id":"metadata=(_metadata:Union(ParagraphMetadata,Nil))-instance-method","name":"metadata=","abstract":false,"args":[{"name":"_metadata","external_name":"_metadata","restriction":"::Union(ParagraphMetadata, ::Nil)"}],"args_string":"(_metadata : Union(ParagraphMetadata, Nil))","args_html":"(_metadata : Union(<a href=\"../../Medium/ParagraphMetadata.html\">ParagraphMetadata</a>, Nil))","location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"metadata=","args":[{"name":"_metadata","external_name":"_metadata","restriction":"::Union(ParagraphMetadata, ::Nil)"}],"visibility":"Public","body":"@metadata = _metadata"}},{"html_id":"mixtapeMetadata:Union(MixtapeMetadata,Nil)-instance-method","name":"mixtapeMetadata","abstract":false,"location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"mixtapeMetadata","return_type":"::Union(MixtapeMetadata, ::Nil)","visibility":"Public","body":"@mixtapeMetadata"}},{"html_id":"mixtapeMetadata=(_mixtapeMetadata:Union(MixtapeMetadata,Nil))-instance-method","name":"mixtapeMetadata=","abstract":false,"args":[{"name":"_mixtapeMetadata","external_name":"_mixtapeMetadata","restriction":"::Union(MixtapeMetadata, ::Nil)"}],"args_string":"(_mixtapeMetadata : Union(MixtapeMetadata, Nil))","args_html":"(_mixtapeMetadata : Union(<a href=\"../../Medium/Post/Paragraph/MixtapeMetadata.html\">MixtapeMetadata</a>, Nil))","location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"mixtapeMetadata=","args":[{"name":"_mixtapeMetadata","external_name":"_mixtapeMetadata","restriction":"::Union(MixtapeMetadata, ::Nil)"}],"visibility":"Public","body":"@mixtapeMetadata = _mixtapeMetadata"}},{"html_id":"name:Union(String,Nil)-instance-method","name":"name","abstract":false,"location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"name","return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@name"}},{"html_id":"name=(_name:Union(String,Nil))-instance-method","name":"name=","abstract":false,"args":[{"name":"_name","external_name":"_name","restriction":"::Union(String, ::Nil)"}],"args_string":"(_name : Union(String, Nil))","args_html":"(_name : Union(String, Nil))","location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"name=","args":[{"name":"_name","external_name":"_name","restriction":"::Union(String, ::Nil)"}],"visibility":"Public","body":"@name = _name"}},{"html_id":"process_embedly_content(content:String):String-instance-method","name":"process_embedly_content","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"String"}],"args_string":"(content : String) : String","args_html":"(content : String) : String","location":{"filename":"src/medium/post/paragraph.cr","line_number":162,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L162"},"def":{"name":"process_embedly_content","args":[{"name":"content","external_name":"content","restriction":"String"}],"return_type":"String","visibility":"Public","body":"@logger.debug(7, \"Processing embedly element\")\nm = content.match(/\\<iframe[^\\>]*src=\"(?<src>[^\"]*)\"/)\nif m.nil? || m[\"src\"].empty?\n  return \"\"\nend\nembedly_url = URI.parse(m[\"src\"])\nparams = embedly_url.query_params\nschema = params[\"schema\"]\nalt_text = params[\"display_name\"]? || schema\nthumbnail_url = params[\"image\"]? || \"\"\nsrc = params[\"src\"]\nresult = \"__#{schema}__:\\n\"\nimage = schema\nif !thumbnail_url.empty?\n  image = \"![#{alt_text}](#{thumbnail_url})\"\nend\nif src.empty?\n  result = result + image\nelse\n  result = result + \"[#{image}](#{src})\"\nend\nresult\n"}},{"html_id":"process_gist_content(content:String):String-instance-method","name":"process_gist_content","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"String"}],"args_string":"(content : String) : String","args_html":"(content : String) : String","location":{"filename":"src/medium/post/paragraph.cr","line_number":213,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L213"},"def":{"name":"process_gist_content","args":[{"name":"content","external_name":"content","restriction":"String"}],"return_type":"String","visibility":"Public","body":"@logger.debug(7, \"Processing gist element\")\nm = content.match(/\\<script src=\\\"https:\\/\\/gist\\.github\\.com\\/[^\\/]*\\/(?<id>[^\"]*).js/)\nif m.nil?\n  return \"\"\nend\ngists = fetch_gist(m[\"id\"])\nif gists.nil?\n  return \"\"\nend\nreturn gists.map do |gist|\n  \"```\\n#{gist[\"content\"]}\\n```\\n\" + \"> *[#{gist[\"filename\"]} view raw](#{gist[\"raw_url\"]})*\"\nend.join(\"\\n\")\n"}},{"html_id":"process_twitter_content(content:String):String-instance-method","name":"process_twitter_content","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"String"}],"args_string":"(content : String) : String","args_html":"(content : String) : String","location":{"filename":"src/medium/post/paragraph.cr","line_number":228,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L228"},"def":{"name":"process_twitter_content","args":[{"name":"content","external_name":"content","restriction":"String"}],"return_type":"String","visibility":"Public","body":"@logger.debug(7, \"Processing twitter element\")\nm = content.match(/<meta[^>]*name=\"description\"[^>]*>/m)\nif m.nil?\n  return \"\"\nend\nm = m[0].match(/content=\"(?<tweet>[^\"]*)\"/m)\nif m.nil? || m[\"tweet\"].empty?\n  return \"\"\nend\nresult = \"> #{m[\"tweet\"]}\"\nm = content.match(/<blockquote[^>]*class=\"twitter-tweet\"[^>]*>(?<quote>.*)<\\/blockquote>/m)\nif m.nil? || m[\"quote\"].empty?\n  return result\nend\n(result + \"\\n> \") + m[\"quote\"]\n"}},{"html_id":"process_youtube_content(content:String):String-instance-method","name":"process_youtube_content","abstract":false,"args":[{"name":"content","external_name":"content","restriction":"String"}],"args_string":"(content : String) : String","args_html":"(content : String) : String","location":{"filename":"src/medium/post/paragraph.cr","line_number":150,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L150"},"def":{"name":"process_youtube_content","args":[{"name":"content","external_name":"content","restriction":"String"}],"return_type":"String","visibility":"Public","body":"@logger.debug(7, \"Processing youtube element\")\nm = content.match(/\\<iframe[^\\>]*widgets\\/media\\.html\\?.*(&amp;)?url=(?<url>[^&;]*)&amp;/)\nif m.nil?\n  return \"\"\nend\nm = m.not_nil!\nurl = (URI.decode(m[\"url\"])).sub(\"http://\", \"https://\")\nid = url[/v=[^&]+/][2..]\nthumbnail_url = \"https://img.youtube.com/vi/#{id}/hqdefault.jpg\"\n\"[![Youtube](#{thumbnail_url})](#{url})\"\n"}},{"html_id":"text:String-instance-method","name":"text","abstract":false,"location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"text","return_type":"String","visibility":"Public","body":"@text"}},{"html_id":"text=(_text:String)-instance-method","name":"text=","abstract":false,"args":[{"name":"_text","external_name":"_text","restriction":"String"}],"args_string":"(_text : String)","args_html":"(_text : String)","location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"text=","args":[{"name":"_text","external_name":"_text","restriction":"String"}],"visibility":"Public","body":"@text = _text"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"visibility":"Public","body":"json.object do\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _type = @type\n  if _type.nil?\n  else\n    json.field(\"type\") do\n      _type.to_json(json)\n    end\n  end\n  _text = @text\n  if _text.nil?\n  else\n    json.field(\"text\") do\n      _text.to_json(json)\n    end\n  end\n  _markups = @markups\n  if _markups.nil?\n  else\n    json.field(\"markups\") do\n      _markups.to_json(json)\n    end\n  end\n  _metadata = @metadata\n  if _metadata.nil?\n  else\n    json.field(\"metadata\") do\n      _metadata.to_json(json)\n    end\n  end\n  _layout = @layout\n  if _layout.nil?\n  else\n    json.field(\"layout\") do\n      _layout.to_json(json)\n    end\n  end\n  _hasDropCap = @hasDropCap\n  if _hasDropCap.nil?\n  else\n    json.field(\"hasDropCap\") do\n      _hasDropCap.to_json(json)\n    end\n  end\n  _dropCapImage = @dropCapImage\n  if _dropCapImage.nil?\n  else\n    json.field(\"dropCapImage\") do\n      _dropCapImage.to_json(json)\n    end\n  end\n  _iframe = @iframe\n  if _iframe.nil?\n  else\n    json.field(\"iframe\") do\n      _iframe.to_json(json)\n    end\n  end\n  _mixtapeMetadata = @mixtapeMetadata\n  if _mixtapeMetadata.nil?\n  else\n    json.field(\"mixtapeMetadata\") do\n      _mixtapeMetadata.to_json(json)\n    end\n  end\n  _href = @href\n  if _href.nil?\n  else\n    json.field(\"href\") do\n      _href.to_json(json)\n    end\n  end\n  _alignment = @alignment\n  if _alignment.nil?\n  else\n    json.field(\"alignment\") do\n      _alignment.to_json(json)\n    end\n  end\nend"}},{"html_id":"to_md(options:Array(Medup::Options)=Array(Medup::Options).new,logger:Logger=Logger.new(STDOUT)):Tuple(String,String,String)-instance-method","name":"to_md","abstract":false,"args":[{"name":"options","default_value":"Array(Medup::Options).new","external_name":"options","restriction":"Array(Medup::Options)"},{"name":"logger","default_value":"Logger.new(STDOUT)","external_name":"logger","restriction":"Logger"}],"args_string":"(options : Array(Medup::Options) = Array(Medup::Options).new, logger : Logger = Logger.new(STDOUT)) : Tuple(String, String, String)","args_html":"(options : Array(<a href=\"../../Medup/Options.html\">Medup::Options</a>) = <span class=\"t\">Array</span>(<span class=\"t\">Medup</span><span class=\"t\">::</span><span class=\"t\">Options</span>).<span class=\"k\">new</span>, logger : Logger = <span class=\"t\">Logger</span>.<span class=\"k\">new</span>(<span class=\"t\">STDOUT</span>)) : Tuple(String, String, String)","location":{"filename":"src/medium/post/paragraph.cr","line_number":29,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L29"},"def":{"name":"to_md","args":[{"name":"options","default_value":"Array(Medup::Options).new","external_name":"options","restriction":"Array(Medup::Options)"},{"name":"logger","default_value":"Logger.new(STDOUT)","external_name":"logger","restriction":"Logger"}],"return_type":"Tuple(String, String, String)","visibility":"Public","body":"@logger = logger\ncontent : String = \"\"\nassets = \"\"\nasset_name = \"\"\ncontent = case @type\nwhen 1\n  markup\nwhen 2\n  \"# #{markup}\"\nwhen 3\n  \"# #{markup}\"\nwhen 4\n  m = metadata\n  if (!m.nil?) && (!m.id.nil?)\n    asset_body, asset_type, asset_name = download_image(m.id || \"\")\n    asset_id = Base64.strict_encode(m.id)\n    if options.includes?(Medup::Options::ASSETS_IMAGE)\n      assets = asset_body\n      if @href\n        \"[![#{@text}](./assets/#{asset_name})](#{@href})\"\n      else\n        \"![#{@text}](./assets/#{asset_name})\"\n      end\n    else\n      assets = \"[image_ref_#{asset_id}]: data:#{asset_type};base64,\"\n      img = \"![#{@text}][image_ref_#{asset_id}]\"\n      assets = assets + (Base64.strict_encode(asset_body))\n      if @href\n        img = \"[#{img}](#{@href})\"\n      end\n      img\n    end\n  else\n    \"\"\n  end\nwhen 6\n  \"> #{markup}\"\nwhen 7\n  \">> #{markup}\"\nwhen 8\n  \"```\\n#{@text}\\n```\"\nwhen 9\n  \"* #{markup}\"\nwhen 10\n  \"1. #{markup}\"\nwhen 11\n  if @iframe.nil?\n    \"<!-- Missing iframe -->\"\n  else\n    frame = @iframe.not_nil!\n    result = \"\"\n    media_content, media_type = download(frame.mediaResourceId)\n    if media_content.includes?(\"<script src=\\\"https://gist.github.com/\")\n      result = process_gist_content(media_content)\n    else\n      if media_content.includes?(\"schema=youtube\")\n        result = process_youtube_content(media_content)\n      else\n        if media_content.includes?(\"https://twitter.com\")\n          result = process_twitter_content(media_content)\n        else\n          if media_content.includes?(\"cdn.embedly.com\")\n            result = process_embedly_content(media_content)\n          end\n        end\n      end\n    end\n    if result.empty?\n      asset_id = Zaru.sanitize!(frame.mediaResourceId)\n      asset_name = \"#{asset_id}.html\"\n      asset_body, _content_type = download(frame.mediaResourceId)\n      assets = asset_body\n      result = \"<iframe src=\\\"./assets/#{asset_id}.html\\\"></iframe>\"\n    end\n    markup_body = markup.strip\n    if !markup_body.empty?\n      if !result.empty?\n        result = result + \"\\n\"\n      end\n      result = result + markup_body\n    end\n    result\n  end\nwhen 13\n  \"### #{markup}\"\nwhen 14\n  \"#{@mixtapeMetadata.try(&.href)}\"\nwhen 15\n  \"\"\nelse\n  raise(\"Unknown paragraph type #{@type} with text #{@text}\")\nend\nreturn {content, asset_name, assets}\n"}},{"html_id":"type:Int64-instance-method","name":"type","abstract":false,"location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"type","return_type":"Int64","visibility":"Public","body":"@type"}},{"html_id":"type=(_type:Int64)-instance-method","name":"type=","abstract":false,"args":[{"name":"_type","external_name":"_type","restriction":"Int64"}],"args_string":"(_type : Int64)","args_html":"(_type : Int64)","location":{"filename":"src/medium/post/paragraph.cr","line_number":11,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L11"},"def":{"name":"type=","args":[{"name":"_type","external_name":"_type","restriction":"Int64"}],"visibility":"Public","body":"@type = _type"}}],"types":[{"html_id":"medup/Medium/Post/Paragraph/DropCapImage","path":"Medium/Post/Paragraph/DropCapImage.html","kind":"class","full_name":"Medium::Post::Paragraph::DropCapImage","name":"DropCapImage","abstract":false,"superclass":{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/post/paragraph.cr","line_number":349,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L349"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medium/Post/Paragraph","kind":"class","full_name":"Medium::Post::Paragraph","name":"Paragraph"},"constructors":[{"html_id":"new(__temp_132:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"__temp_132","external_name":"__temp_132","restriction":"::JSON::PullParser"}],"args_string":"(__temp_132 : JSON::PullParser)","args_html":"(__temp_132 : JSON::PullParser)","def":{"name":"new","args":[{"name":"__temp_132","external_name":"__temp_132","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"_ = allocate\n_.initialize(__temp_132)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"id:String-instance-method","name":"id","abstract":false,"def":{"name":"id","return_type":"String","visibility":"Public","body":"@id"}},{"html_id":"id=(_id:String)-instance-method","name":"id=","abstract":false,"args":[{"name":"_id","external_name":"_id","restriction":"String"}],"args_string":"(_id : String)","args_html":"(_id : String)","def":{"name":"id=","args":[{"name":"_id","external_name":"_id","restriction":"String"}],"visibility":"Public","body":"@id = _id"}},{"html_id":"originalHeight:Int64-instance-method","name":"originalHeight","abstract":false,"def":{"name":"originalHeight","return_type":"Int64","visibility":"Public","body":"@originalHeight"}},{"html_id":"originalHeight=(_originalHeight:Int64)-instance-method","name":"originalHeight=","abstract":false,"args":[{"name":"_originalHeight","external_name":"_originalHeight","restriction":"Int64"}],"args_string":"(_originalHeight : Int64)","args_html":"(_originalHeight : Int64)","def":{"name":"originalHeight=","args":[{"name":"_originalHeight","external_name":"_originalHeight","restriction":"Int64"}],"visibility":"Public","body":"@originalHeight = _originalHeight"}},{"html_id":"originalWidth:Int64-instance-method","name":"originalWidth","abstract":false,"def":{"name":"originalWidth","return_type":"Int64","visibility":"Public","body":"@originalWidth"}},{"html_id":"originalWidth=(_originalWidth:Int64)-instance-method","name":"originalWidth=","abstract":false,"args":[{"name":"_originalWidth","external_name":"_originalWidth","restriction":"Int64"}],"args_string":"(_originalWidth : Int64)","args_html":"(_originalWidth : Int64)","def":{"name":"originalWidth=","args":[{"name":"_originalWidth","external_name":"_originalWidth","restriction":"Int64"}],"visibility":"Public","body":"@originalWidth = _originalWidth"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"visibility":"Public","body":"json.object do\n  _id = @id\n  if _id.nil?\n  else\n    json.field(\"id\") do\n      _id.to_json(json)\n    end\n  end\n  _originalWidth = @originalWidth\n  if _originalWidth.nil?\n  else\n    json.field(\"originalWidth\") do\n      _originalWidth.to_json(json)\n    end\n  end\n  _originalHeight = @originalHeight\n  if _originalHeight.nil?\n  else\n    json.field(\"originalHeight\") do\n      _originalHeight.to_json(json)\n    end\n  end\nend"}}]},{"html_id":"medup/Medium/Post/Paragraph/Iframe","path":"Medium/Post/Paragraph/Iframe.html","kind":"class","full_name":"Medium::Post::Paragraph::Iframe","name":"Iframe","abstract":false,"superclass":{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/post/paragraph.cr","line_number":327,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L327"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medium/Post/Paragraph","kind":"class","full_name":"Medium::Post::Paragraph","name":"Paragraph"},"constructors":[{"html_id":"new(__temp_114:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"__temp_114","external_name":"__temp_114","restriction":"::JSON::PullParser"}],"args_string":"(__temp_114 : JSON::PullParser)","args_html":"(__temp_114 : JSON::PullParser)","def":{"name":"new","args":[{"name":"__temp_114","external_name":"__temp_114","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"_ = allocate\n_.initialize(__temp_114)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"content:String?-instance-method","name":"content","abstract":false,"location":{"filename":"src/medium/post/paragraph.cr","line_number":328,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L328"},"def":{"name":"content","return_type":"String | ::Nil","visibility":"Public","body":"@content"}},{"html_id":"get-instance-method","name":"get","abstract":false,"location":{"filename":"src/medium/post/paragraph.cr","line_number":337,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L337"},"def":{"name":"get","visibility":"Public","body":"@content || (@content = Medium::Client.default.media(mediaResourceId))"}},{"html_id":"iframeHeight:Union(Int64,Nil)-instance-method","name":"iframeHeight","abstract":false,"def":{"name":"iframeHeight","return_type":"::Union(Int64, ::Nil)","visibility":"Public","body":"@iframeHeight"}},{"html_id":"iframeHeight=(_iframeHeight:Union(Int64,Nil))-instance-method","name":"iframeHeight=","abstract":false,"args":[{"name":"_iframeHeight","external_name":"_iframeHeight","restriction":"::Union(Int64, ::Nil)"}],"args_string":"(_iframeHeight : Union(Int64, Nil))","args_html":"(_iframeHeight : Union(Int64, Nil))","def":{"name":"iframeHeight=","args":[{"name":"_iframeHeight","external_name":"_iframeHeight","restriction":"::Union(Int64, ::Nil)"}],"visibility":"Public","body":"@iframeHeight = _iframeHeight"}},{"html_id":"iframeWidth:Union(Int64,Nil)-instance-method","name":"iframeWidth","abstract":false,"def":{"name":"iframeWidth","return_type":"::Union(Int64, ::Nil)","visibility":"Public","body":"@iframeWidth"}},{"html_id":"iframeWidth=(_iframeWidth:Union(Int64,Nil))-instance-method","name":"iframeWidth=","abstract":false,"args":[{"name":"_iframeWidth","external_name":"_iframeWidth","restriction":"::Union(Int64, ::Nil)"}],"args_string":"(_iframeWidth : Union(Int64, Nil))","args_html":"(_iframeWidth : Union(Int64, Nil))","def":{"name":"iframeWidth=","args":[{"name":"_iframeWidth","external_name":"_iframeWidth","restriction":"::Union(Int64, ::Nil)"}],"visibility":"Public","body":"@iframeWidth = _iframeWidth"}},{"html_id":"mediaResourceId:String-instance-method","name":"mediaResourceId","abstract":false,"def":{"name":"mediaResourceId","return_type":"String","visibility":"Public","body":"@mediaResourceId"}},{"html_id":"mediaResourceId=(_mediaResourceId:String)-instance-method","name":"mediaResourceId=","abstract":false,"args":[{"name":"_mediaResourceId","external_name":"_mediaResourceId","restriction":"String"}],"args_string":"(_mediaResourceId : String)","args_html":"(_mediaResourceId : String)","def":{"name":"mediaResourceId=","args":[{"name":"_mediaResourceId","external_name":"_mediaResourceId","restriction":"String"}],"visibility":"Public","body":"@mediaResourceId = _mediaResourceId"}},{"html_id":"thumbnailUrl:Union(String,Nil)-instance-method","name":"thumbnailUrl","abstract":false,"def":{"name":"thumbnailUrl","return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@thumbnailUrl"}},{"html_id":"thumbnailUrl=(_thumbnailUrl:Union(String,Nil))-instance-method","name":"thumbnailUrl=","abstract":false,"args":[{"name":"_thumbnailUrl","external_name":"_thumbnailUrl","restriction":"::Union(String, ::Nil)"}],"args_string":"(_thumbnailUrl : Union(String, Nil))","args_html":"(_thumbnailUrl : Union(String, Nil))","def":{"name":"thumbnailUrl=","args":[{"name":"_thumbnailUrl","external_name":"_thumbnailUrl","restriction":"::Union(String, ::Nil)"}],"visibility":"Public","body":"@thumbnailUrl = _thumbnailUrl"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"visibility":"Public","body":"json.object do\n  _mediaResourceId = @mediaResourceId\n  if _mediaResourceId.nil?\n  else\n    json.field(\"mediaResourceId\") do\n      _mediaResourceId.to_json(json)\n    end\n  end\n  _thumbnailUrl = @thumbnailUrl\n  if _thumbnailUrl.nil?\n  else\n    json.field(\"thumbnailUrl\") do\n      _thumbnailUrl.to_json(json)\n    end\n  end\n  _iframeWidth = @iframeWidth\n  if _iframeWidth.nil?\n  else\n    json.field(\"iframeWidth\") do\n      _iframeWidth.to_json(json)\n    end\n  end\n  _iframeHeight = @iframeHeight\n  if _iframeHeight.nil?\n  else\n    json.field(\"iframeHeight\") do\n      _iframeHeight.to_json(json)\n    end\n  end\nend"}}]},{"html_id":"medup/Medium/Post/Paragraph/MixtapeMetadata","path":"Medium/Post/Paragraph/MixtapeMetadata.html","kind":"class","full_name":"Medium::Post::Paragraph::MixtapeMetadata","name":"MixtapeMetadata","abstract":false,"superclass":{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/post/paragraph.cr","line_number":342,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L342"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medium/Post/Paragraph","kind":"class","full_name":"Medium::Post::Paragraph","name":"Paragraph"},"constructors":[{"html_id":"new(__temp_125:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"__temp_125","external_name":"__temp_125","restriction":"::JSON::PullParser"}],"args_string":"(__temp_125 : JSON::PullParser)","args_html":"(__temp_125 : JSON::PullParser)","def":{"name":"new","args":[{"name":"__temp_125","external_name":"__temp_125","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"_ = allocate\n_.initialize(__temp_125)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"href:Union(String,Nil)-instance-method","name":"href","abstract":false,"def":{"name":"href","return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@href"}},{"html_id":"href=(_href:Union(String,Nil))-instance-method","name":"href=","abstract":false,"args":[{"name":"_href","external_name":"_href","restriction":"::Union(String, ::Nil)"}],"args_string":"(_href : Union(String, Nil))","args_html":"(_href : Union(String, Nil))","def":{"name":"href=","args":[{"name":"_href","external_name":"_href","restriction":"::Union(String, ::Nil)"}],"visibility":"Public","body":"@href = _href"}},{"html_id":"mediaResourceId:String-instance-method","name":"mediaResourceId","abstract":false,"def":{"name":"mediaResourceId","return_type":"String","visibility":"Public","body":"@mediaResourceId"}},{"html_id":"mediaResourceId=(_mediaResourceId:String)-instance-method","name":"mediaResourceId=","abstract":false,"args":[{"name":"_mediaResourceId","external_name":"_mediaResourceId","restriction":"String"}],"args_string":"(_mediaResourceId : String)","args_html":"(_mediaResourceId : String)","def":{"name":"mediaResourceId=","args":[{"name":"_mediaResourceId","external_name":"_mediaResourceId","restriction":"String"}],"visibility":"Public","body":"@mediaResourceId = _mediaResourceId"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"visibility":"Public","body":"json.object do\n  _mediaResourceId = @mediaResourceId\n  if _mediaResourceId.nil?\n  else\n    json.field(\"mediaResourceId\") do\n      _mediaResourceId.to_json(json)\n    end\n  end\n  _href = @href\n  if _href.nil?\n  else\n    json.field(\"href\") do\n      _href.to_json(json)\n    end\n  end\nend"}}]},{"html_id":"medup/Medium/Post/Paragraph/ParagraphMarkup","path":"Medium/Post/Paragraph/ParagraphMarkup.html","kind":"class","full_name":"Medium::Post::Paragraph::ParagraphMarkup","name":"ParagraphMarkup","abstract":false,"superclass":{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/post/paragraph.cr","line_number":315,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/paragraph.cr#L315"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medium/Post/Paragraph","kind":"class","full_name":"Medium::Post::Paragraph","name":"Paragraph"},"constructors":[{"html_id":"new(__temp_97:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"__temp_97","external_name":"__temp_97","restriction":"::JSON::PullParser"}],"args_string":"(__temp_97 : JSON::PullParser)","args_html":"(__temp_97 : JSON::PullParser)","def":{"name":"new","args":[{"name":"__temp_97","external_name":"__temp_97","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"_ = allocate\n_.initialize(__temp_97)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"anchorType:Union(Int64,Nil)-instance-method","name":"anchorType","abstract":false,"def":{"name":"anchorType","return_type":"::Union(Int64, ::Nil)","visibility":"Public","body":"@anchorType"}},{"html_id":"anchorType=(_anchorType:Union(Int64,Nil))-instance-method","name":"anchorType=","abstract":false,"args":[{"name":"_anchorType","external_name":"_anchorType","restriction":"::Union(Int64, ::Nil)"}],"args_string":"(_anchorType : Union(Int64, Nil))","args_html":"(_anchorType : Union(Int64, Nil))","def":{"name":"anchorType=","args":[{"name":"_anchorType","external_name":"_anchorType","restriction":"::Union(Int64, ::Nil)"}],"visibility":"Public","body":"@anchorType = _anchorType"}},{"html_id":"end:Int64-instance-method","name":"end","abstract":false,"def":{"name":"end","return_type":"Int64","visibility":"Public","body":"@end"}},{"html_id":"end=(_end:Int64)-instance-method","name":"end=","abstract":false,"args":[{"name":"_end","external_name":"_end","restriction":"Int64"}],"args_string":"(_end : Int64)","args_html":"(_end : Int64)","def":{"name":"end=","args":[{"name":"_end","external_name":"_end","restriction":"Int64"}],"visibility":"Public","body":"@end = _end"}},{"html_id":"href:Union(String,Nil)-instance-method","name":"href","abstract":false,"def":{"name":"href","return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@href"}},{"html_id":"href=(_href:Union(String,Nil))-instance-method","name":"href=","abstract":false,"args":[{"name":"_href","external_name":"_href","restriction":"::Union(String, ::Nil)"}],"args_string":"(_href : Union(String, Nil))","args_html":"(_href : Union(String, Nil))","def":{"name":"href=","args":[{"name":"_href","external_name":"_href","restriction":"::Union(String, ::Nil)"}],"visibility":"Public","body":"@href = _href"}},{"html_id":"rel=(_rel:Union(String,Nil))-instance-method","name":"rel=","abstract":false,"args":[{"name":"_rel","external_name":"_rel","restriction":"::Union(String, ::Nil)"}],"args_string":"(_rel : Union(String, Nil))","args_html":"(_rel : Union(String, Nil))","def":{"name":"rel=","args":[{"name":"_rel","external_name":"_rel","restriction":"::Union(String, ::Nil)"}],"visibility":"Public","body":"@rel = _rel"}},{"html_id":"rel?:Union(String,Nil)-instance-method","name":"rel?","abstract":false,"def":{"name":"rel?","return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@rel"}},{"html_id":"start:Int64-instance-method","name":"start","abstract":false,"def":{"name":"start","return_type":"Int64","visibility":"Public","body":"@start"}},{"html_id":"start=(_start:Int64)-instance-method","name":"start=","abstract":false,"args":[{"name":"_start","external_name":"_start","restriction":"Int64"}],"args_string":"(_start : Int64)","args_html":"(_start : Int64)","def":{"name":"start=","args":[{"name":"_start","external_name":"_start","restriction":"Int64"}],"visibility":"Public","body":"@start = _start"}},{"html_id":"title:Union(String,Nil)-instance-method","name":"title","abstract":false,"def":{"name":"title","return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@title"}},{"html_id":"title=(_title:Union(String,Nil))-instance-method","name":"title=","abstract":false,"args":[{"name":"_title","external_name":"_title","restriction":"::Union(String, ::Nil)"}],"args_string":"(_title : Union(String, Nil))","args_html":"(_title : Union(String, Nil))","def":{"name":"title=","args":[{"name":"_title","external_name":"_title","restriction":"::Union(String, ::Nil)"}],"visibility":"Public","body":"@title = _title"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"visibility":"Public","body":"json.object do\n  _type = @type\n  if _type.nil?\n  else\n    json.field(\"type\") do\n      _type.to_json(json)\n    end\n  end\n  _start = @start\n  if _start.nil?\n  else\n    json.field(\"start\") do\n      _start.to_json(json)\n    end\n  end\n  _end = @end\n  if _end.nil?\n  else\n    json.field(\"end\") do\n      _end.to_json(json)\n    end\n  end\n  _href = @href\n  if _href.nil?\n  else\n    json.field(\"href\") do\n      _href.to_json(json)\n    end\n  end\n  _title = @title\n  if _title.nil?\n  else\n    json.field(\"title\") do\n      _title.to_json(json)\n    end\n  end\n  _rel = @rel\n  if _rel.nil?\n  else\n    json.field(\"rel\") do\n      _rel.to_json(json)\n    end\n  end\n  _anchorType = @anchorType\n  if _anchorType.nil?\n  else\n    json.field(\"anchorType\") do\n      _anchorType.to_json(json)\n    end\n  end\nend"}},{"html_id":"type:Int64-instance-method","name":"type","abstract":false,"def":{"name":"type","return_type":"Int64","visibility":"Public","body":"@type"}},{"html_id":"type=(_type:Int64)-instance-method","name":"type=","abstract":false,"args":[{"name":"_type","external_name":"_type","restriction":"Int64"}],"args_string":"(_type : Int64)","args_html":"(_type : Int64)","def":{"name":"type=","args":[{"name":"_type","external_name":"_type","restriction":"Int64"}],"visibility":"Public","body":"@type = _type"}}]}]},{"html_id":"medup/Medium/Post/Tag","path":"Medium/Post/Tag.html","kind":"class","full_name":"Medium::Post::Tag","name":"Tag","abstract":false,"superclass":{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/post/tag.cr","line_number":5,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post/tag.cr#L5"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medium/Post","kind":"class","full_name":"Medium::Post","name":"Post"},"constructors":[{"html_id":"new(__temp_141:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"__temp_141","external_name":"__temp_141","restriction":"::JSON::PullParser"}],"args_string":"(__temp_141 : JSON::PullParser)","args_html":"(__temp_141 : JSON::PullParser)","def":{"name":"new","args":[{"name":"__temp_141","external_name":"__temp_141","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"_ = allocate\n_.initialize(__temp_141)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"slug:String-instance-method","name":"slug","abstract":false,"def":{"name":"slug","return_type":"String","visibility":"Public","body":"@slug"}},{"html_id":"slug=(_slug:String)-instance-method","name":"slug=","abstract":false,"args":[{"name":"_slug","external_name":"_slug","restriction":"String"}],"args_string":"(_slug : String)","args_html":"(_slug : String)","def":{"name":"slug=","args":[{"name":"_slug","external_name":"_slug","restriction":"String"}],"visibility":"Public","body":"@slug = _slug"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"visibility":"Public","body":"json.object do\n  _slug = @slug\n  if _slug.nil?\n  else\n    json.field(\"slug\") do\n      _slug.to_json(json)\n    end\n  end\nend"}}]}]},{"html_id":"medup/Medium/PostBodyModel","path":"Medium/PostBodyModel.html","kind":"class","full_name":"Medium::PostBodyModel","name":"PostBodyModel","abstract":false,"superclass":{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/post.cr","line_number":108,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L108"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medium","kind":"module","full_name":"Medium","name":"Medium"},"constructors":[{"html_id":"new(__temp_175:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"__temp_175","external_name":"__temp_175","restriction":"::JSON::PullParser"}],"args_string":"(__temp_175 : JSON::PullParser)","args_html":"(__temp_175 : JSON::PullParser)","def":{"name":"new","args":[{"name":"__temp_175","external_name":"__temp_175","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"_ = allocate\n_.initialize(__temp_175)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"paragraphs:Array(Post::Paragraph)-instance-method","name":"paragraphs","abstract":false,"def":{"name":"paragraphs","return_type":"Array(Post::Paragraph)","visibility":"Public","body":"@paragraphs"}},{"html_id":"paragraphs=(_paragraphs:Array(Post::Paragraph))-instance-method","name":"paragraphs=","abstract":false,"args":[{"name":"_paragraphs","external_name":"_paragraphs","restriction":"Array(Post::Paragraph)"}],"args_string":"(_paragraphs : Array(Post::Paragraph))","args_html":"(_paragraphs : Array(<a href=\"../Medium/Post/Paragraph.html\">Post::Paragraph</a>))","def":{"name":"paragraphs=","args":[{"name":"_paragraphs","external_name":"_paragraphs","restriction":"Array(Post::Paragraph)"}],"visibility":"Public","body":"@paragraphs = _paragraphs"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"visibility":"Public","body":"json.object do\n  _paragraphs = @paragraphs\n  if _paragraphs.nil?\n  else\n    json.field(\"paragraphs\") do\n      _paragraphs.to_json(json)\n    end\n  end\nend"}}]},{"html_id":"medup/Medium/PostContent","path":"Medium/PostContent.html","kind":"class","full_name":"Medium::PostContent","name":"PostContent","abstract":false,"superclass":{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/post.cr","line_number":94,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L94"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medium","kind":"module","full_name":"Medium","name":"Medium"},"constructors":[{"html_id":"new(__temp_161:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"__temp_161","external_name":"__temp_161","restriction":"::JSON::PullParser"}],"args_string":"(__temp_161 : JSON::PullParser)","args_html":"(__temp_161 : JSON::PullParser)","def":{"name":"new","args":[{"name":"__temp_161","external_name":"__temp_161","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"_ = allocate\n_.initialize(__temp_161)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"bodyModel:PostBodyModel-instance-method","name":"bodyModel","abstract":false,"def":{"name":"bodyModel","return_type":"PostBodyModel","visibility":"Public","body":"@bodyModel"}},{"html_id":"bodyModel=(_bodyModel:PostBodyModel)-instance-method","name":"bodyModel=","abstract":false,"args":[{"name":"_bodyModel","external_name":"_bodyModel","restriction":"PostBodyModel"}],"args_string":"(_bodyModel : PostBodyModel)","args_html":"(_bodyModel : <a href=\"../Medium/PostBodyModel.html\">PostBodyModel</a>)","def":{"name":"bodyModel=","args":[{"name":"_bodyModel","external_name":"_bodyModel","restriction":"PostBodyModel"}],"visibility":"Public","body":"@bodyModel = _bodyModel"}},{"html_id":"metaDescription:Union(String,Nil)-instance-method","name":"metaDescription","abstract":false,"def":{"name":"metaDescription","return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@metaDescription"}},{"html_id":"metaDescription=(_metaDescription:Union(String,Nil))-instance-method","name":"metaDescription=","abstract":false,"args":[{"name":"_metaDescription","external_name":"_metaDescription","restriction":"::Union(String, ::Nil)"}],"args_string":"(_metaDescription : Union(String, Nil))","args_html":"(_metaDescription : Union(String, Nil))","def":{"name":"metaDescription=","args":[{"name":"_metaDescription","external_name":"_metaDescription","restriction":"::Union(String, ::Nil)"}],"visibility":"Public","body":"@metaDescription = _metaDescription"}},{"html_id":"subtitle:Union(String,Nil)-instance-method","name":"subtitle","abstract":false,"def":{"name":"subtitle","return_type":"::Union(String, ::Nil)","visibility":"Public","body":"@subtitle"}},{"html_id":"subtitle=(_subtitle:Union(String,Nil))-instance-method","name":"subtitle=","abstract":false,"args":[{"name":"_subtitle","external_name":"_subtitle","restriction":"::Union(String, ::Nil)"}],"args_string":"(_subtitle : Union(String, Nil))","args_html":"(_subtitle : Union(String, Nil))","def":{"name":"subtitle=","args":[{"name":"_subtitle","external_name":"_subtitle","restriction":"::Union(String, ::Nil)"}],"visibility":"Public","body":"@subtitle = _subtitle"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"visibility":"Public","body":"json.object do\n  _subtitle = @subtitle\n  if _subtitle.nil?\n  else\n    json.field(\"subtitle\") do\n      _subtitle.to_json(json)\n    end\n  end\n  _metaDescription = @metaDescription\n  if _metaDescription.nil?\n  else\n    json.field(\"metaDescription\") do\n      _metaDescription.to_json(json)\n    end\n  end\n  _bodyModel = @bodyModel\n  if _bodyModel.nil?\n  else\n    json.field(\"bodyModel\") do\n      _bodyModel.to_json(json)\n    end\n  end\nend"}}]},{"html_id":"medup/Medium/PostVirtuals","path":"Medium/PostVirtuals.html","kind":"class","full_name":"Medium::PostVirtuals","name":"PostVirtuals","abstract":false,"superclass":{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/post.cr","line_number":102,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/post.cr#L102"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medium","kind":"module","full_name":"Medium","name":"Medium"},"constructors":[{"html_id":"new(__temp_170:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"__temp_170","external_name":"__temp_170","restriction":"::JSON::PullParser"}],"args_string":"(__temp_170 : JSON::PullParser)","args_html":"(__temp_170 : JSON::PullParser)","def":{"name":"new","args":[{"name":"__temp_170","external_name":"__temp_170","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"_ = allocate\n_.initialize(__temp_170)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"tags:Array(Post::Tag)-instance-method","name":"tags","abstract":false,"def":{"name":"tags","return_type":"Array(Post::Tag)","visibility":"Public","body":"@tags"}},{"html_id":"tags=(_tags:Array(Post::Tag))-instance-method","name":"tags=","abstract":false,"args":[{"name":"_tags","external_name":"_tags","restriction":"Array(Post::Tag)"}],"args_string":"(_tags : Array(Post::Tag))","args_html":"(_tags : Array(<a href=\"../Medium/Post/Tag.html\">Post::Tag</a>))","def":{"name":"tags=","args":[{"name":"_tags","external_name":"_tags","restriction":"Array(Post::Tag)"}],"visibility":"Public","body":"@tags = _tags"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"visibility":"Public","body":"json.object do\n  _tags = @tags\n  if _tags.nil?\n  else\n    json.field(\"tags\") do\n      _tags.to_json(json)\n    end\n  end\nend"}}]},{"html_id":"medup/Medium/ServerError","path":"Medium/ServerError.html","kind":"class","full_name":"Medium::ServerError","name":"ServerError","abstract":false,"superclass":{"html_id":"medup/Medium/Error","kind":"class","full_name":"Medium::Error","name":"Error"},"ancestors":[{"html_id":"medup/Medium/Error","kind":"class","full_name":"Medium::Error","name":"Error"},{"html_id":"medup/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/error.cr","line_number":67,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/error.cr#L67"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medium","kind":"module","full_name":"Medium","name":"Medium"}},{"html_id":"medup/Medium/User","path":"Medium/User.html","kind":"class","full_name":"Medium::User","name":"User","abstract":false,"superclass":{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medium/user.cr","line_number":4,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medium/user.cr#L4"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medium","kind":"module","full_name":"Medium","name":"Medium"},"constructors":[{"html_id":"new(__temp_185:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"__temp_185","external_name":"__temp_185","restriction":"::JSON::PullParser"}],"args_string":"(__temp_185 : JSON::PullParser)","args_html":"(__temp_185 : JSON::PullParser)","def":{"name":"new","args":[{"name":"__temp_185","external_name":"__temp_185","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"_ = allocate\n_.initialize(__temp_185)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"name:String-instance-method","name":"name","abstract":false,"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"name=(_name:String)-instance-method","name":"name=","abstract":false,"args":[{"name":"_name","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","args_html":"(_name : String)","def":{"name":"name=","args":[{"name":"_name","external_name":"_name","restriction":"String"}],"visibility":"Public","body":"@name = _name"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"::JSON::Builder"}],"visibility":"Public","body":"json.object do\n  _userId = @userId\n  if _userId.nil?\n  else\n    json.field(\"userId\") do\n      _userId.to_json(json)\n    end\n  end\n  _name = @name\n  if _name.nil?\n  else\n    json.field(\"name\") do\n      _name.to_json(json)\n    end\n  end\n  _username = @username\n  if _username.nil?\n  else\n    json.field(\"username\") do\n      _username.to_json(json)\n    end\n  end\nend"}},{"html_id":"userId:String-instance-method","name":"userId","abstract":false,"def":{"name":"userId","return_type":"String","visibility":"Public","body":"@userId"}},{"html_id":"userId=(_userId:String)-instance-method","name":"userId=","abstract":false,"args":[{"name":"_userId","external_name":"_userId","restriction":"String"}],"args_string":"(_userId : String)","args_html":"(_userId : String)","def":{"name":"userId=","args":[{"name":"_userId","external_name":"_userId","restriction":"String"}],"visibility":"Public","body":"@userId = _userId"}},{"html_id":"username:String-instance-method","name":"username","abstract":false,"def":{"name":"username","return_type":"String","visibility":"Public","body":"@username"}},{"html_id":"username=(_username:String)-instance-method","name":"username=","abstract":false,"args":[{"name":"_username","external_name":"_username","restriction":"String"}],"args_string":"(_username : String)","args_html":"(_username : String)","def":{"name":"username=","args":[{"name":"_username","external_name":"_username","restriction":"String"}],"visibility":"Public","body":"@username = _username"}}]}]},{"html_id":"medup/Medup","path":"Medup.html","kind":"module","full_name":"Medup","name":"Medup","abstract":false,"locations":[{"filename":"src/medup/command.cr","line_number":5,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/command.cr#L5"},{"filename":"src/medup/options.cr","line_number":1,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/options.cr#L1"},{"filename":"src/medup/tool.cr","line_number":5,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/tool.cr#L5"},{"filename":"src/medup/version.cr","line_number":1,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/version.cr#L1"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.3.0\""}],"types":[{"html_id":"medup/Medup/Command","path":"Medup/Command.html","kind":"class","full_name":"Medup::Command","name":"Command","abstract":false,"superclass":{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medup/command.cr","line_number":6,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/command.cr#L6"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"medup/Medup","kind":"module","full_name":"Medup","name":"Medup"},"class_methods":[{"html_id":"backup(user,publication,articles,token,dist,format,source,options,log)-class-method","name":"backup","abstract":false,"args":[{"name":"user","external_name":"user","restriction":""},{"name":"publication","external_name":"publication","restriction":""},{"name":"articles","external_name":"articles","restriction":""},{"name":"token","external_name":"token","restriction":""},{"name":"dist","external_name":"dist","restriction":""},{"name":"format","external_name":"format","restriction":""},{"name":"source","external_name":"source","restriction":""},{"name":"options","external_name":"options","restriction":""},{"name":"log","external_name":"log","restriction":""}],"args_string":"(user, publication, articles, token, dist, format, source, options, log)","args_html":"(user, publication, articles, token, dist, format, source, options, log)","location":{"filename":"src/medup/command.cr","line_number":85,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/command.cr#L85"},"def":{"name":"backup","args":[{"name":"user","external_name":"user","restriction":""},{"name":"publication","external_name":"publication","restriction":""},{"name":"articles","external_name":"articles","restriction":""},{"name":"token","external_name":"token","restriction":""},{"name":"dist","external_name":"dist","restriction":""},{"name":"format","external_name":"format","restriction":""},{"name":"source","external_name":"source","restriction":""},{"name":"options","external_name":"options","restriction":""},{"name":"log","external_name":"log","restriction":""}],"visibility":"Public","body":"begin\n  targets = extract_targets(articles)\n  if targets[:articles].size > 0\n    tool = ::Medup::Tool.new(token: token, articles: targets[:articles], dist: dist, format: format, source: source, options: options, logger: log)\n    tool.backup\n    tool.close\n  end\n  (targets[:users] + [user]).compact.each do |u|\n    tool = ::Medup::Tool.new(token: token, user: u, dist: dist, format: format, source: source, options: options, logger: log)\n    tool.backup\n    tool.close\n  end\n  (targets[:publications] + [publication]).compact.each do |p|\n    tool = ::Medup::Tool.new(token: token, publication: p, dist: dist, format: format, source: source, options: options, logger: log)\n    tool.backup\n    tool.close\n  end\nrescue ex : Exception\n  STDERR.puts(\"error: #{ex.inspect}\")\n  log.debug(6_i8, ex.inspect_with_backtrace)\n  STDERR.puts(\"See 'medup --help' for usage.\")\n  exit(1)\nend"}},{"html_id":"extract_targets(input)-class-method","name":"extract_targets","abstract":false,"args":[{"name":"input","external_name":"input","restriction":""}],"args_string":"(input)","args_html":"(input)","location":{"filename":"src/medup/command.cr","line_number":66,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/command.cr#L66"},"def":{"name":"extract_targets","args":[{"name":"input","external_name":"input","restriction":""}],"visibility":"Public","body":"users = Array(String).new\npublications = Array(String).new\narticles = Array(String).new\ninput.each do |word|\n  case word\n  when /^\\@.*/\n    users << word[1..]\n  when /^https?:\\/\\/.*/\n    articles << word\n  else\n    publications << word\n  end\nend\nreturn {users: users, publications: publications, articles: articles}\n"}},{"html_id":"run-class-method","name":"run","abstract":false,"location":{"filename":"src/medup/command.cr","line_number":7,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/command.cr#L7"},"def":{"name":"run","visibility":"Public","body":"token = ENV.fetch(\"MEDIUM_TOKEN\", \"\")\nuser = nil\npublication = nil\ndist = ::Medup::Tool::DIST_PATH\nformat = ::Medup::Tool::MARKDOWN_FORMAT\nsource = ::Medup::Tool::SOURCE_AUTHOR_POSTS\noptions = Array(::Medup::Options).new\nlog_level : Int8 = 1_i8\nshould_exit = false\nparser = OptionParser.parse do |parser|\n  parser.banner = \"Usage:\\n  medup [arguments] [@user or publication name or url]\\n\"\n  parser.on(\"-u USER\", \"--user=USER\", \"Medium author username. Download alrticles for this author. E.g: miry\") do |u|\n    user = u\n  end\n  parser.on(\"-p PUBLICATION\", \"--publication=PUBLICATION\", \"Medium publication slug. Download articles for the publication. E.g: jetthoughts\") do |pub|\n    publication = pub\n  end\n  parser.on(\"-d DIRECTORY\", \"--directory=DIRECTORY\", \"Path to local directory where articles should be dumped. Default: ./posts\") do |d|\n    dist = d\n  end\n  parser.on(\"-f FORMAT\", \"--format=FORMAT\", \"Specify the document format. Available options: md or json. Default: md\") do |f|\n    format = f\n    if [::Medup::Tool::MARKDOWN_FORMAT, ::Medup::Tool::JSON_FORMAT].includes?(format)\n    else\n      puts(\"Unknown format option: #{format}\")\n      puts(parser)\n      should_exit = true\n    end\n  end\n  parser.on(\"--assets-images\", \"Download images in assets folder. By default all images encoded in the same markdown document.\") do\n    options << ::Medup::Options::ASSETS_IMAGE\n  end\n  parser.on(\"-r\", \"--recommended\", \"Export all posts to wich user clapped / has recommended\") do\n    source = ::Medup::Tool::SOURCE_RECOMMENDED_POSTS\n  end\n  parser.on(\"--update\", \"Overwrite existing articles files, if the same article exists\") do\n    options << ::Medup::Options::UPDATE_CONTENT\n  end\n  parser.on(\"-h\", \"--help\", \"Show this help\") do\n    puts(parser)\n    should_exit = true\n  end\n  parser.on(\"--version\", \"Print current version\") do\n    puts(::Medup::VERSION)\n    should_exit = true\n  end\n  parser.on(\"-v LEVEL\", \"--v=LEVEL\", \"number for the log level verbosity\") do |l|\n    log_level = l.to_i8\n  end\n  parser.missing_option do |option_flag|\n    STDERR.puts(\"error: flag needs an argument: #{option_flag}\")\n    STDERR.puts(\"See 'medup --help' for usage.\")\n    exit(1)\n  end\n  parser.invalid_option do |option_flag|\n    STDERR.puts(\"error: unknown flag: #{option_flag}\")\n    STDERR.puts(\"See 'medup --help' for usage.\")\n    exit(1)\n  end\nend\narticles = ARGV\nif (((!should_exit) && user.nil?) && publication.nil?) && articles.empty?\n  STDERR.puts(\"error: missing of the required arguments\")\n  STDERR.puts(\"See 'medup --help' for usage.\")\n  exit(1)\nend\nif should_exit\n  return\nend\nlog = Logger.new(STDERR, level: log_level)\nbackup(user, publication, articles, token, dist, format, source, options, log)\n"}}]},{"html_id":"medup/Medup/Options","path":"Medup/Options.html","kind":"enum","full_name":"Medup::Options","name":"Options","abstract":false,"ancestors":[{"html_id":"medup/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"medup/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"medup/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medup/options.cr","line_number":3,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/options.cr#L3"}],"repository_name":"medup","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"ASSETS_IMAGE","name":"ASSETS_IMAGE","value":"1"},{"id":"UPDATE_CONTENT","name":"UPDATE_CONTENT","value":"2"}],"namespace":{"html_id":"medup/Medup","kind":"module","full_name":"Medup","name":"Medup"},"instance_methods":[{"html_id":"assets_image?-instance-method","name":"assets_image?","abstract":false,"location":{"filename":"src/medup/options.cr","line_number":4,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/options.cr#L4"},"def":{"name":"assets_image?","visibility":"Public","body":"self.includes?(ASSETS_IMAGE)"}},{"html_id":"none?-instance-method","name":"none?","abstract":false,"location":{"filename":"src/medup/options.cr","line_number":3,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/options.cr#L3"},"def":{"name":"none?","visibility":"Public","body":"value == 0"}},{"html_id":"update_content?-instance-method","name":"update_content?","abstract":false,"location":{"filename":"src/medup/options.cr","line_number":5,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/options.cr#L5"},"def":{"name":"update_content?","visibility":"Public","body":"self.includes?(UPDATE_CONTENT)"}}]},{"html_id":"medup/Medup/Tool","path":"Medup/Tool.html","kind":"class","full_name":"Medup::Tool","name":"Tool","abstract":false,"superclass":{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"medup/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"medup/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/medup/tool.cr","line_number":6,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/tool.cr#L6"}],"repository_name":"medup","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ASSETS_DIR_NAME","name":"ASSETS_DIR_NAME","value":"\"assets\""},{"id":"DIST_PATH","name":"DIST_PATH","value":"\"./posts\""},{"id":"JSON_FORMAT","name":"JSON_FORMAT","value":"\"json\""},{"id":"MARKDOWN_FORMAT","name":"MARKDOWN_FORMAT","value":"\"md\""},{"id":"SOURCE_AUTHOR_POSTS","name":"SOURCE_AUTHOR_POSTS","value":"\"overview\""},{"id":"SOURCE_RECOMMENDED_POSTS","name":"SOURCE_RECOMMENDED_POSTS","value":"\"has-recommended\""}],"namespace":{"html_id":"medup/Medup","kind":"module","full_name":"Medup","name":"Medup"},"constructors":[{"html_id":"new(token:String=\"\",dist:String?=DIST_PATH,format:String?=MARKDOWN_FORMAT,source:String?=SOURCE_AUTHOR_POSTS,user:String?=nil,publication:String?=nil,articles:Array(String)=Array(String).new,options:Array(Medup::Options)=Array(Medup::Options).new,logger:Logger=Logger.new(STDOUT))-class-method","name":"new","abstract":false,"args":[{"name":"token","default_value":"\"\"","external_name":"token","restriction":"String"},{"name":"dist","default_value":"DIST_PATH","external_name":"dist","restriction":"String | ::Nil"},{"name":"format","default_value":"MARKDOWN_FORMAT","external_name":"format","restriction":"String | ::Nil"},{"name":"source","default_value":"SOURCE_AUTHOR_POSTS","external_name":"source","restriction":"String | ::Nil"},{"name":"user","default_value":"nil","external_name":"user","restriction":"String | ::Nil"},{"name":"publication","default_value":"nil","external_name":"publication","restriction":"String | ::Nil"},{"name":"articles","default_value":"Array(String).new","external_name":"articles","restriction":"Array(String)"},{"name":"options","default_value":"Array(Medup::Options).new","external_name":"options","restriction":"Array(Medup::Options)"},{"name":"logger","default_value":"Logger.new(STDOUT)","external_name":"logger","restriction":"Logger"}],"args_string":"(token : String = \"\", dist : String? = DIST_PATH, format : String? = MARKDOWN_FORMAT, source : String? = SOURCE_AUTHOR_POSTS, user : String? = nil, publication : String? = nil, articles : Array(String) = Array(String).new, options : Array(Medup::Options) = Array(Medup::Options).new, logger : Logger = Logger.new(STDOUT))","args_html":"(token : String = <span class=\"s\">&quot;&quot;</span>, dist : String? = <span class=\"t\">DIST_PATH</span>, format : String? = <span class=\"t\">MARKDOWN_FORMAT</span>, source : String? = <span class=\"t\">SOURCE_AUTHOR_POSTS</span>, user : String? = <span class=\"n\">nil</span>, publication : String? = <span class=\"n\">nil</span>, articles : Array(String) = <span class=\"t\">Array</span>(<span class=\"t\">String</span>).<span class=\"k\">new</span>, options : Array(<a href=\"../Medup/Options.html\">Medup::Options</a>) = <span class=\"t\">Array</span>(<span class=\"t\">Medup</span><span class=\"t\">::</span><span class=\"t\">Options</span>).<span class=\"k\">new</span>, logger : Logger = <span class=\"t\">Logger</span>.<span class=\"k\">new</span>(<span class=\"t\">STDOUT</span>))","location":{"filename":"src/medup/tool.cr","line_number":21,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/tool.cr#L21"},"def":{"name":"new","args":[{"name":"token","default_value":"\"\"","external_name":"token","restriction":"String"},{"name":"dist","default_value":"DIST_PATH","external_name":"dist","restriction":"String | ::Nil"},{"name":"format","default_value":"MARKDOWN_FORMAT","external_name":"format","restriction":"String | ::Nil"},{"name":"source","default_value":"SOURCE_AUTHOR_POSTS","external_name":"source","restriction":"String | ::Nil"},{"name":"user","default_value":"nil","external_name":"user","restriction":"String | ::Nil"},{"name":"publication","default_value":"nil","external_name":"publication","restriction":"String | ::Nil"},{"name":"articles","default_value":"Array(String).new","external_name":"articles","restriction":"Array(String)"},{"name":"options","default_value":"Array(Medup::Options).new","external_name":"options","restriction":"Array(Medup::Options)"},{"name":"logger","default_value":"Logger.new(STDOUT)","external_name":"logger","restriction":"Logger"}],"visibility":"Public","body":"_ = allocate\n_.initialize(token, dist, format, source, user, publication, articles, options, logger)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"backup-instance-method","name":"backup","abstract":false,"location":{"filename":"src/medup/tool.cr","line_number":41,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/tool.cr#L41"},"def":{"name":"backup","visibility":"Public","body":"posts = Array(String).new\nposts = if !@articles.empty?\n  @client.normalize_urls(@articles)\nelse\n  if !@user.nil?\n    @client.streams(@source)\n  else\n    if !@publication.nil?\n      @client.collection_archive\n    end\n  end\nend\nif posts.nil? || posts.empty?\n  raise(\"No articles to backup\")\nend\ncreate_directory(@dist)\ncreate_directory(@assets_dist)\nprocess_posts_async(posts)\n"}},{"html_id":"close:Nil-instance-method","name":"close","abstract":false,"location":{"filename":"src/medup/tool.cr","line_number":81,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/tool.cr#L81"},"def":{"name":"close","return_type":"Nil","visibility":"Public","body":"if @client.nil?\nelse\n  @client.close\nend"}},{"html_id":"create_directory(path)-instance-method","name":"create_directory","abstract":false,"args":[{"name":"path","external_name":"path","restriction":""}],"args_string":"(path)","args_html":"(path)","location":{"filename":"src/medup/tool.cr","line_number":129,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/tool.cr#L129"},"def":{"name":"create_directory","args":[{"name":"path","external_name":"path","restriction":""}],"visibility":"Public","body":"if File.directory?(path)\nelse\n  @logger.debug(\"Create directory #{path}\")\n  Dir.mkdir_p(path)\nend"}},{"html_id":"process_post(post_url:String)-instance-method","name":"process_post","abstract":false,"args":[{"name":"post_url","external_name":"post_url","restriction":"String"}],"args_string":"(post_url : String)","args_html":"(post_url : String)","location":{"filename":"src/medup/tool.cr","line_number":85,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/tool.cr#L85"},"def":{"name":"process_post","args":[{"name":"post_url","external_name":"post_url","restriction":"String"}],"visibility":"Public","body":"begin\n  client = Medium::Client.new(@token, @user, @publication, @logger)\n  post = client.post_by_url(post_url)\n  save(post, @format)\nrescue ex : ::Medium::Error | ::Medium::InvalidContentError\n  @logger.error(\"error: could not process #{post_url}: #{ex.message}\")\nrescue ex : Exception\n  @logger.error(\"error: #{ex.inspect}\")\n  @logger.error(ex.inspect_with_backtrace)\nensure\n  if client.nil?\n  else\n    client.close\n  end\nend"}},{"html_id":"process_posts_async(posts)-instance-method","name":"process_posts_async","abstract":false,"args":[{"name":"posts","external_name":"posts","restriction":""}],"args_string":"(posts)","args_html":"(posts)","location":{"filename":"src/medup/tool.cr","line_number":58,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/tool.cr#L58"},"def":{"name":"process_posts_async","args":[{"name":"posts","external_name":"posts","restriction":""}],"visibility":"Public","body":"@logger.info(\"Posts count: #{posts.size}\")\nchannel_start = Channel(String).new(2)\nchannel_finished = Channel(String).new(2)\nposts.each do |post_url|\n  spawn do\n    channel_start.send(post_url)\n    process_post(post_url)\n    channel_finished.send(post_url)\n  end\nend\nposts.size.times do\n  channel_start.receive?\n  channel_finished.receive?\nend\nchannel_start.close\nchannel_finished.close\n"}},{"html_id":"save(post,format=\"json\")-instance-method","name":"save","abstract":false,"args":[{"name":"post","external_name":"post","restriction":""},{"name":"format","default_value":"\"json\"","external_name":"format","restriction":""}],"args_string":"(post, format = \"json\")","args_html":"(post, format = <span class=\"s\">&quot;json&quot;</span>)","location":{"filename":"src/medup/tool.cr","line_number":98,"url":"https://github.com/miry/medup/blob/7dcf0ff083c79b5530bab110d040be3b802fed6b/src/medup/tool.cr#L98"},"def":{"name":"save","args":[{"name":"post","external_name":"post","restriction":""},{"name":"format","default_value":"\"json\"","external_name":"format","restriction":""}],"visibility":"Public","body":"slug = post.slug\ncreated_at = post.created_at\nfilename = ((((created_at.to_s(\"%F\")) + \"-\") + slug) + \".\") + format\nfilepath = File.join(@dist, filename)\nif File.exists?(filepath)\n  if @update\n  else\n    return\n  end\n  if File.exists?(filepath + \".old\")\n    File.delete(filepath + \".old\")\n  end\n  File.rename(filepath, filepath + \".old\")\nend\n@logger.info(\"Create file #{filepath}\")\npost.options = @options\nif format == \"json\"\n  File.write(filepath, post.to_pretty_json)\n  return\nend\ncontent, assets = post.to_md\nFile.write(filepath, content)\nassets.each do |filename, content|\n  filepath = File.join(@assets_dist, filename)\n  @logger.debug(\"Create asset #{filepath}\")\n  File.write(filepath, content)\nend\n"}}]}]}]}})